// Generated by the protocol buffer compiler.  DO NOT EDIT!

package noop.model.proto;

public final class Noop {
  private Noop() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Modifier
      implements com.google.protobuf.ProtocolMessageEnum {
    MUTABLE(0, 1),
    NATIVE(1, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static Modifier valueOf(int value) {
      switch (value) {
        case 1: return MUTABLE;
        case 2: return NATIVE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Modifier>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Modifier>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Modifier>() {
            public Modifier findValueByNumber(int number) {
              return Modifier.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return noop.model.proto.Noop.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Modifier[] VALUES = {
      MUTABLE, NATIVE, 
    };
    public static Modifier valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private Modifier(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
  }
  
  public static final class Documentation extends
      com.google.protobuf.GeneratedMessage {
    // Use Documentation.newBuilder() to construct.
    private Documentation() {}
    
    private static final Documentation defaultInstance = new Documentation();
    public static Documentation getDefaultInstance() {
      return defaultInstance;
    }
    
    public Documentation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Documentation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Documentation_fieldAccessorTable;
    }
    
    // required string summary = 1;
    public static final int SUMMARY_FIELD_NUMBER = 1;
    private boolean hasSummary;
    private java.lang.String summary_ = "";
    public boolean hasSummary() { return hasSummary; }
    public java.lang.String getSummary() { return summary_; }
    
    // repeated string author = 2;
    public static final int AUTHOR_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> author_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getAuthorList() {
      return author_;
    }
    public int getAuthorCount() { return author_.size(); }
    public java.lang.String getAuthor(int index) {
      return author_.get(index);
    }
    
    // repeated string parameter = 3;
    public static final int PARAMETER_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> parameter_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getParameterList() {
      return parameter_;
    }
    public int getParameterCount() { return parameter_.size(); }
    public java.lang.String getParameter(int index) {
      return parameter_.get(index);
    }
    
    // repeated string return = 4;
    public static final int RETURN_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> return_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getReturnList() {
      return return_;
    }
    public int getReturnCount() { return return_.size(); }
    public java.lang.String getReturn(int index) {
      return return_.get(index);
    }
    
    // optional string details = 5;
    public static final int DETAILS_FIELD_NUMBER = 5;
    private boolean hasDetails;
    private java.lang.String details_ = "";
    public boolean hasDetails() { return hasDetails; }
    public java.lang.String getDetails() { return details_; }
    
    public final boolean isInitialized() {
      if (!hasSummary) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasSummary()) {
        output.writeString(1, getSummary());
      }
      for (java.lang.String element : getAuthorList()) {
        output.writeString(2, element);
      }
      for (java.lang.String element : getParameterList()) {
        output.writeString(3, element);
      }
      for (java.lang.String element : getReturnList()) {
        output.writeString(4, element);
      }
      if (hasDetails()) {
        output.writeString(5, getDetails());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSummary()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSummary());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getAuthorList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getAuthorList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getParameterList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getParameterList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getReturnList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getReturnList().size();
      }
      if (hasDetails()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getDetails());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Documentation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Documentation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Documentation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Documentation result;
      
      // Construct using noop.model.proto.Noop.Documentation.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Documentation();
        return builder;
      }
      
      protected noop.model.proto.Noop.Documentation internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Documentation();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Documentation.getDescriptor();
      }
      
      public noop.model.proto.Noop.Documentation getDefaultInstanceForType() {
        return noop.model.proto.Noop.Documentation.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Documentation build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Documentation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Documentation buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.author_ != java.util.Collections.EMPTY_LIST) {
          result.author_ =
            java.util.Collections.unmodifiableList(result.author_);
        }
        if (result.parameter_ != java.util.Collections.EMPTY_LIST) {
          result.parameter_ =
            java.util.Collections.unmodifiableList(result.parameter_);
        }
        if (result.return_ != java.util.Collections.EMPTY_LIST) {
          result.return_ =
            java.util.Collections.unmodifiableList(result.return_);
        }
        noop.model.proto.Noop.Documentation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Documentation) {
          return mergeFrom((noop.model.proto.Noop.Documentation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Documentation other) {
        if (other == noop.model.proto.Noop.Documentation.getDefaultInstance()) return this;
        if (other.hasSummary()) {
          setSummary(other.getSummary());
        }
        if (!other.author_.isEmpty()) {
          if (result.author_.isEmpty()) {
            result.author_ = new java.util.ArrayList<java.lang.String>();
          }
          result.author_.addAll(other.author_);
        }
        if (!other.parameter_.isEmpty()) {
          if (result.parameter_.isEmpty()) {
            result.parameter_ = new java.util.ArrayList<java.lang.String>();
          }
          result.parameter_.addAll(other.parameter_);
        }
        if (!other.return_.isEmpty()) {
          if (result.return_.isEmpty()) {
            result.return_ = new java.util.ArrayList<java.lang.String>();
          }
          result.return_.addAll(other.return_);
        }
        if (other.hasDetails()) {
          setDetails(other.getDetails());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSummary(input.readString());
              break;
            }
            case 18: {
              addAuthor(input.readString());
              break;
            }
            case 26: {
              addParameter(input.readString());
              break;
            }
            case 34: {
              addReturn(input.readString());
              break;
            }
            case 42: {
              setDetails(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string summary = 1;
      public boolean hasSummary() {
        return result.hasSummary();
      }
      public java.lang.String getSummary() {
        return result.getSummary();
      }
      public Builder setSummary(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSummary = true;
        result.summary_ = value;
        return this;
      }
      public Builder clearSummary() {
        result.hasSummary = false;
        result.summary_ = getDefaultInstance().getSummary();
        return this;
      }
      
      // repeated string author = 2;
      public java.util.List<java.lang.String> getAuthorList() {
        return java.util.Collections.unmodifiableList(result.author_);
      }
      public int getAuthorCount() {
        return result.getAuthorCount();
      }
      public java.lang.String getAuthor(int index) {
        return result.getAuthor(index);
      }
      public Builder setAuthor(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.author_.set(index, value);
        return this;
      }
      public Builder addAuthor(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.author_.isEmpty()) {
          result.author_ = new java.util.ArrayList<java.lang.String>();
        }
        result.author_.add(value);
        return this;
      }
      public Builder addAllAuthor(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.author_.isEmpty()) {
          result.author_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.author_);
        return this;
      }
      public Builder clearAuthor() {
        result.author_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string parameter = 3;
      public java.util.List<java.lang.String> getParameterList() {
        return java.util.Collections.unmodifiableList(result.parameter_);
      }
      public int getParameterCount() {
        return result.getParameterCount();
      }
      public java.lang.String getParameter(int index) {
        return result.getParameter(index);
      }
      public Builder setParameter(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.parameter_.set(index, value);
        return this;
      }
      public Builder addParameter(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.parameter_.isEmpty()) {
          result.parameter_ = new java.util.ArrayList<java.lang.String>();
        }
        result.parameter_.add(value);
        return this;
      }
      public Builder addAllParameter(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.parameter_.isEmpty()) {
          result.parameter_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.parameter_);
        return this;
      }
      public Builder clearParameter() {
        result.parameter_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string return = 4;
      public java.util.List<java.lang.String> getReturnList() {
        return java.util.Collections.unmodifiableList(result.return_);
      }
      public int getReturnCount() {
        return result.getReturnCount();
      }
      public java.lang.String getReturn(int index) {
        return result.getReturn(index);
      }
      public Builder setReturn(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.return_.set(index, value);
        return this;
      }
      public Builder addReturn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.return_.isEmpty()) {
          result.return_ = new java.util.ArrayList<java.lang.String>();
        }
        result.return_.add(value);
        return this;
      }
      public Builder addAllReturn(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.return_.isEmpty()) {
          result.return_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.return_);
        return this;
      }
      public Builder clearReturn() {
        result.return_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string details = 5;
      public boolean hasDetails() {
        return result.hasDetails();
      }
      public java.lang.String getDetails() {
        return result.getDetails();
      }
      public Builder setDetails(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDetails = true;
        result.details_ = value;
        return this;
      }
      public Builder clearDetails() {
        result.hasDetails = false;
        result.details_ = getDefaultInstance().getDetails();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Library extends
      com.google.protobuf.GeneratedMessage {
    // Use Library.newBuilder() to construct.
    private Library() {}
    
    private static final Library defaultInstance = new Library();
    public static Library getDefaultInstance() {
      return defaultInstance;
    }
    
    public Library getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Library_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Library_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // optional string copyright = 3;
    public static final int COPYRIGHT_FIELD_NUMBER = 3;
    private boolean hasCopyright;
    private java.lang.String copyright_ = "";
    public boolean hasCopyright() { return hasCopyright; }
    public java.lang.String getCopyright() { return copyright_; }
    
    // repeated .Binding binding = 4;
    public static final int BINDING_FIELD_NUMBER = 4;
    private java.util.List<noop.model.proto.Noop.Binding> binding_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Binding> getBindingList() {
      return binding_;
    }
    public int getBindingCount() { return binding_.size(); }
    public noop.model.proto.Noop.Binding getBinding(int index) {
      return binding_.get(index);
    }
    
    // repeated .Alias alias = 5;
    public static final int ALIAS_FIELD_NUMBER = 5;
    private java.util.List<noop.model.proto.Noop.Alias> alias_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Alias> getAliasList() {
      return alias_;
    }
    public int getAliasCount() { return alias_.size(); }
    public noop.model.proto.Noop.Alias getAlias(int index) {
      return alias_.get(index);
    }
    
    // repeated .Interface interface = 6;
    public static final int INTERFACE_FIELD_NUMBER = 6;
    private java.util.List<noop.model.proto.Noop.Interface> interface_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Interface> getInterfaceList() {
      return interface_;
    }
    public int getInterfaceCount() { return interface_.size(); }
    public noop.model.proto.Noop.Interface getInterface(int index) {
      return interface_.get(index);
    }
    
    // repeated .ConcreteClass concrete_class = 7;
    public static final int CONCRETE_CLASS_FIELD_NUMBER = 7;
    private java.util.List<noop.model.proto.Noop.ConcreteClass> concreteClass_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.ConcreteClass> getConcreteClassList() {
      return concreteClass_;
    }
    public int getConcreteClassCount() { return concreteClass_.size(); }
    public noop.model.proto.Noop.ConcreteClass getConcreteClass(int index) {
      return concreteClass_.get(index);
    }
    
    // repeated .Test test = 8;
    public static final int TEST_FIELD_NUMBER = 8;
    private java.util.List<noop.model.proto.Noop.Test> test_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Test> getTestList() {
      return test_;
    }
    public int getTestCount() { return test_.size(); }
    public noop.model.proto.Noop.Test getTest(int index) {
      return test_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Binding element : getBindingList()) {
        if (!element.isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Alias element : getAliasList()) {
        if (!element.isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Interface element : getInterfaceList()) {
        if (!element.isInitialized()) return false;
      }
      for (noop.model.proto.Noop.ConcreteClass element : getConcreteClassList()) {
        if (!element.isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Test element : getTestList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      if (hasCopyright()) {
        output.writeString(3, getCopyright());
      }
      for (noop.model.proto.Noop.Binding element : getBindingList()) {
        output.writeMessage(4, element);
      }
      for (noop.model.proto.Noop.Alias element : getAliasList()) {
        output.writeMessage(5, element);
      }
      for (noop.model.proto.Noop.Interface element : getInterfaceList()) {
        output.writeMessage(6, element);
      }
      for (noop.model.proto.Noop.ConcreteClass element : getConcreteClassList()) {
        output.writeMessage(7, element);
      }
      for (noop.model.proto.Noop.Test element : getTestList()) {
        output.writeMessage(8, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      if (hasCopyright()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getCopyright());
      }
      for (noop.model.proto.Noop.Binding element : getBindingList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (noop.model.proto.Noop.Alias element : getAliasList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (noop.model.proto.Noop.Interface element : getInterfaceList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      for (noop.model.proto.Noop.ConcreteClass element : getConcreteClassList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      for (noop.model.proto.Noop.Test element : getTestList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Library parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Library parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Library parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Library parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Library prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Library result;
      
      // Construct using noop.model.proto.Noop.Library.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Library();
        return builder;
      }
      
      protected noop.model.proto.Noop.Library internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Library();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Library.getDescriptor();
      }
      
      public noop.model.proto.Noop.Library getDefaultInstanceForType() {
        return noop.model.proto.Noop.Library.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Library build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Library buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Library buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.binding_ != java.util.Collections.EMPTY_LIST) {
          result.binding_ =
            java.util.Collections.unmodifiableList(result.binding_);
        }
        if (result.alias_ != java.util.Collections.EMPTY_LIST) {
          result.alias_ =
            java.util.Collections.unmodifiableList(result.alias_);
        }
        if (result.interface_ != java.util.Collections.EMPTY_LIST) {
          result.interface_ =
            java.util.Collections.unmodifiableList(result.interface_);
        }
        if (result.concreteClass_ != java.util.Collections.EMPTY_LIST) {
          result.concreteClass_ =
            java.util.Collections.unmodifiableList(result.concreteClass_);
        }
        if (result.test_ != java.util.Collections.EMPTY_LIST) {
          result.test_ =
            java.util.Collections.unmodifiableList(result.test_);
        }
        noop.model.proto.Noop.Library returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Library) {
          return mergeFrom((noop.model.proto.Noop.Library)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Library other) {
        if (other == noop.model.proto.Noop.Library.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (other.hasCopyright()) {
          setCopyright(other.getCopyright());
        }
        if (!other.binding_.isEmpty()) {
          if (result.binding_.isEmpty()) {
            result.binding_ = new java.util.ArrayList<noop.model.proto.Noop.Binding>();
          }
          result.binding_.addAll(other.binding_);
        }
        if (!other.alias_.isEmpty()) {
          if (result.alias_.isEmpty()) {
            result.alias_ = new java.util.ArrayList<noop.model.proto.Noop.Alias>();
          }
          result.alias_.addAll(other.alias_);
        }
        if (!other.interface_.isEmpty()) {
          if (result.interface_.isEmpty()) {
            result.interface_ = new java.util.ArrayList<noop.model.proto.Noop.Interface>();
          }
          result.interface_.addAll(other.interface_);
        }
        if (!other.concreteClass_.isEmpty()) {
          if (result.concreteClass_.isEmpty()) {
            result.concreteClass_ = new java.util.ArrayList<noop.model.proto.Noop.ConcreteClass>();
          }
          result.concreteClass_.addAll(other.concreteClass_);
        }
        if (!other.test_.isEmpty()) {
          if (result.test_.isEmpty()) {
            result.test_ = new java.util.ArrayList<noop.model.proto.Noop.Test>();
          }
          result.test_.addAll(other.test_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setCopyright(input.readString());
              break;
            }
            case 34: {
              noop.model.proto.Noop.Binding.Builder subBuilder = noop.model.proto.Noop.Binding.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBinding(subBuilder.buildPartial());
              break;
            }
            case 42: {
              noop.model.proto.Noop.Alias.Builder subBuilder = noop.model.proto.Noop.Alias.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAlias(subBuilder.buildPartial());
              break;
            }
            case 50: {
              noop.model.proto.Noop.Interface.Builder subBuilder = noop.model.proto.Noop.Interface.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addInterface(subBuilder.buildPartial());
              break;
            }
            case 58: {
              noop.model.proto.Noop.ConcreteClass.Builder subBuilder = noop.model.proto.Noop.ConcreteClass.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addConcreteClass(subBuilder.buildPartial());
              break;
            }
            case 66: {
              noop.model.proto.Noop.Test.Builder subBuilder = noop.model.proto.Noop.Test.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // optional string copyright = 3;
      public boolean hasCopyright() {
        return result.hasCopyright();
      }
      public java.lang.String getCopyright() {
        return result.getCopyright();
      }
      public Builder setCopyright(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCopyright = true;
        result.copyright_ = value;
        return this;
      }
      public Builder clearCopyright() {
        result.hasCopyright = false;
        result.copyright_ = getDefaultInstance().getCopyright();
        return this;
      }
      
      // repeated .Binding binding = 4;
      public java.util.List<noop.model.proto.Noop.Binding> getBindingList() {
        return java.util.Collections.unmodifiableList(result.binding_);
      }
      public int getBindingCount() {
        return result.getBindingCount();
      }
      public noop.model.proto.Noop.Binding getBinding(int index) {
        return result.getBinding(index);
      }
      public Builder setBinding(int index, noop.model.proto.Noop.Binding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.binding_.set(index, value);
        return this;
      }
      public Builder setBinding(int index, noop.model.proto.Noop.Binding.Builder builderForValue) {
        result.binding_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBinding(noop.model.proto.Noop.Binding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.binding_.isEmpty()) {
          result.binding_ = new java.util.ArrayList<noop.model.proto.Noop.Binding>();
        }
        result.binding_.add(value);
        return this;
      }
      public Builder addBinding(noop.model.proto.Noop.Binding.Builder builderForValue) {
        if (result.binding_.isEmpty()) {
          result.binding_ = new java.util.ArrayList<noop.model.proto.Noop.Binding>();
        }
        result.binding_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBinding(
          java.lang.Iterable<? extends noop.model.proto.Noop.Binding> values) {
        if (result.binding_.isEmpty()) {
          result.binding_ = new java.util.ArrayList<noop.model.proto.Noop.Binding>();
        }
        super.addAll(values, result.binding_);
        return this;
      }
      public Builder clearBinding() {
        result.binding_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Alias alias = 5;
      public java.util.List<noop.model.proto.Noop.Alias> getAliasList() {
        return java.util.Collections.unmodifiableList(result.alias_);
      }
      public int getAliasCount() {
        return result.getAliasCount();
      }
      public noop.model.proto.Noop.Alias getAlias(int index) {
        return result.getAlias(index);
      }
      public Builder setAlias(int index, noop.model.proto.Noop.Alias value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.alias_.set(index, value);
        return this;
      }
      public Builder setAlias(int index, noop.model.proto.Noop.Alias.Builder builderForValue) {
        result.alias_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAlias(noop.model.proto.Noop.Alias value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.alias_.isEmpty()) {
          result.alias_ = new java.util.ArrayList<noop.model.proto.Noop.Alias>();
        }
        result.alias_.add(value);
        return this;
      }
      public Builder addAlias(noop.model.proto.Noop.Alias.Builder builderForValue) {
        if (result.alias_.isEmpty()) {
          result.alias_ = new java.util.ArrayList<noop.model.proto.Noop.Alias>();
        }
        result.alias_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAlias(
          java.lang.Iterable<? extends noop.model.proto.Noop.Alias> values) {
        if (result.alias_.isEmpty()) {
          result.alias_ = new java.util.ArrayList<noop.model.proto.Noop.Alias>();
        }
        super.addAll(values, result.alias_);
        return this;
      }
      public Builder clearAlias() {
        result.alias_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Interface interface = 6;
      public java.util.List<noop.model.proto.Noop.Interface> getInterfaceList() {
        return java.util.Collections.unmodifiableList(result.interface_);
      }
      public int getInterfaceCount() {
        return result.getInterfaceCount();
      }
      public noop.model.proto.Noop.Interface getInterface(int index) {
        return result.getInterface(index);
      }
      public Builder setInterface(int index, noop.model.proto.Noop.Interface value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.interface_.set(index, value);
        return this;
      }
      public Builder setInterface(int index, noop.model.proto.Noop.Interface.Builder builderForValue) {
        result.interface_.set(index, builderForValue.build());
        return this;
      }
      public Builder addInterface(noop.model.proto.Noop.Interface value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.interface_.isEmpty()) {
          result.interface_ = new java.util.ArrayList<noop.model.proto.Noop.Interface>();
        }
        result.interface_.add(value);
        return this;
      }
      public Builder addInterface(noop.model.proto.Noop.Interface.Builder builderForValue) {
        if (result.interface_.isEmpty()) {
          result.interface_ = new java.util.ArrayList<noop.model.proto.Noop.Interface>();
        }
        result.interface_.add(builderForValue.build());
        return this;
      }
      public Builder addAllInterface(
          java.lang.Iterable<? extends noop.model.proto.Noop.Interface> values) {
        if (result.interface_.isEmpty()) {
          result.interface_ = new java.util.ArrayList<noop.model.proto.Noop.Interface>();
        }
        super.addAll(values, result.interface_);
        return this;
      }
      public Builder clearInterface() {
        result.interface_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .ConcreteClass concrete_class = 7;
      public java.util.List<noop.model.proto.Noop.ConcreteClass> getConcreteClassList() {
        return java.util.Collections.unmodifiableList(result.concreteClass_);
      }
      public int getConcreteClassCount() {
        return result.getConcreteClassCount();
      }
      public noop.model.proto.Noop.ConcreteClass getConcreteClass(int index) {
        return result.getConcreteClass(index);
      }
      public Builder setConcreteClass(int index, noop.model.proto.Noop.ConcreteClass value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.concreteClass_.set(index, value);
        return this;
      }
      public Builder setConcreteClass(int index, noop.model.proto.Noop.ConcreteClass.Builder builderForValue) {
        result.concreteClass_.set(index, builderForValue.build());
        return this;
      }
      public Builder addConcreteClass(noop.model.proto.Noop.ConcreteClass value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.concreteClass_.isEmpty()) {
          result.concreteClass_ = new java.util.ArrayList<noop.model.proto.Noop.ConcreteClass>();
        }
        result.concreteClass_.add(value);
        return this;
      }
      public Builder addConcreteClass(noop.model.proto.Noop.ConcreteClass.Builder builderForValue) {
        if (result.concreteClass_.isEmpty()) {
          result.concreteClass_ = new java.util.ArrayList<noop.model.proto.Noop.ConcreteClass>();
        }
        result.concreteClass_.add(builderForValue.build());
        return this;
      }
      public Builder addAllConcreteClass(
          java.lang.Iterable<? extends noop.model.proto.Noop.ConcreteClass> values) {
        if (result.concreteClass_.isEmpty()) {
          result.concreteClass_ = new java.util.ArrayList<noop.model.proto.Noop.ConcreteClass>();
        }
        super.addAll(values, result.concreteClass_);
        return this;
      }
      public Builder clearConcreteClass() {
        result.concreteClass_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Test test = 8;
      public java.util.List<noop.model.proto.Noop.Test> getTestList() {
        return java.util.Collections.unmodifiableList(result.test_);
      }
      public int getTestCount() {
        return result.getTestCount();
      }
      public noop.model.proto.Noop.Test getTest(int index) {
        return result.getTest(index);
      }
      public Builder setTest(int index, noop.model.proto.Noop.Test value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.test_.set(index, value);
        return this;
      }
      public Builder setTest(int index, noop.model.proto.Noop.Test.Builder builderForValue) {
        result.test_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTest(noop.model.proto.Noop.Test value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.test_.isEmpty()) {
          result.test_ = new java.util.ArrayList<noop.model.proto.Noop.Test>();
        }
        result.test_.add(value);
        return this;
      }
      public Builder addTest(noop.model.proto.Noop.Test.Builder builderForValue) {
        if (result.test_.isEmpty()) {
          result.test_ = new java.util.ArrayList<noop.model.proto.Noop.Test>();
        }
        result.test_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTest(
          java.lang.Iterable<? extends noop.model.proto.Noop.Test> values) {
        if (result.test_.isEmpty()) {
          result.test_ = new java.util.ArrayList<noop.model.proto.Noop.Test>();
        }
        super.addAll(values, result.test_);
        return this;
      }
      public Builder clearTest() {
        result.test_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class ConcreteClass extends
      com.google.protobuf.GeneratedMessage {
    // Use ConcreteClass.newBuilder() to construct.
    private ConcreteClass() {}
    
    private static final ConcreteClass defaultInstance = new ConcreteClass();
    public static ConcreteClass getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConcreteClass getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_ConcreteClass_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_ConcreteClass_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // repeated string super_type = 3;
    public static final int SUPER_TYPE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> superType_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getSuperTypeList() {
      return superType_;
    }
    public int getSuperTypeCount() { return superType_.size(); }
    public java.lang.String getSuperType(int index) {
      return superType_.get(index);
    }
    
    // repeated .Property property = 4;
    public static final int PROPERTY_FIELD_NUMBER = 4;
    private java.util.List<noop.model.proto.Noop.Property> property_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Property> getPropertyList() {
      return property_;
    }
    public int getPropertyCount() { return property_.size(); }
    public noop.model.proto.Noop.Property getProperty(int index) {
      return property_.get(index);
    }
    
    // repeated .Method method = 5;
    public static final int METHOD_FIELD_NUMBER = 5;
    private java.util.List<noop.model.proto.Noop.Method> method_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Method> getMethodList() {
      return method_;
    }
    public int getMethodCount() { return method_.size(); }
    public noop.model.proto.Noop.Method getMethod(int index) {
      return method_.get(index);
    }
    
    // repeated .Unittest unittest = 6;
    public static final int UNITTEST_FIELD_NUMBER = 6;
    private java.util.List<noop.model.proto.Noop.Unittest> unittest_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Unittest> getUnittestList() {
      return unittest_;
    }
    public int getUnittestCount() { return unittest_.size(); }
    public noop.model.proto.Noop.Unittest getUnittest(int index) {
      return unittest_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Property element : getPropertyList()) {
        if (!element.isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Method element : getMethodList()) {
        if (!element.isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Unittest element : getUnittestList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      for (java.lang.String element : getSuperTypeList()) {
        output.writeString(3, element);
      }
      for (noop.model.proto.Noop.Property element : getPropertyList()) {
        output.writeMessage(4, element);
      }
      for (noop.model.proto.Noop.Method element : getMethodList()) {
        output.writeMessage(5, element);
      }
      for (noop.model.proto.Noop.Unittest element : getUnittestList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getSuperTypeList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSuperTypeList().size();
      }
      for (noop.model.proto.Noop.Property element : getPropertyList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      for (noop.model.proto.Noop.Method element : getMethodList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (noop.model.proto.Noop.Unittest element : getUnittestList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.ConcreteClass parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.ConcreteClass parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.ConcreteClass prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.ConcreteClass result;
      
      // Construct using noop.model.proto.Noop.ConcreteClass.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.ConcreteClass();
        return builder;
      }
      
      protected noop.model.proto.Noop.ConcreteClass internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.ConcreteClass();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.ConcreteClass.getDescriptor();
      }
      
      public noop.model.proto.Noop.ConcreteClass getDefaultInstanceForType() {
        return noop.model.proto.Noop.ConcreteClass.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.ConcreteClass build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.ConcreteClass buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.ConcreteClass buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.superType_ != java.util.Collections.EMPTY_LIST) {
          result.superType_ =
            java.util.Collections.unmodifiableList(result.superType_);
        }
        if (result.property_ != java.util.Collections.EMPTY_LIST) {
          result.property_ =
            java.util.Collections.unmodifiableList(result.property_);
        }
        if (result.method_ != java.util.Collections.EMPTY_LIST) {
          result.method_ =
            java.util.Collections.unmodifiableList(result.method_);
        }
        if (result.unittest_ != java.util.Collections.EMPTY_LIST) {
          result.unittest_ =
            java.util.Collections.unmodifiableList(result.unittest_);
        }
        noop.model.proto.Noop.ConcreteClass returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.ConcreteClass) {
          return mergeFrom((noop.model.proto.Noop.ConcreteClass)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.ConcreteClass other) {
        if (other == noop.model.proto.Noop.ConcreteClass.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (!other.superType_.isEmpty()) {
          if (result.superType_.isEmpty()) {
            result.superType_ = new java.util.ArrayList<java.lang.String>();
          }
          result.superType_.addAll(other.superType_);
        }
        if (!other.property_.isEmpty()) {
          if (result.property_.isEmpty()) {
            result.property_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
          }
          result.property_.addAll(other.property_);
        }
        if (!other.method_.isEmpty()) {
          if (result.method_.isEmpty()) {
            result.method_ = new java.util.ArrayList<noop.model.proto.Noop.Method>();
          }
          result.method_.addAll(other.method_);
        }
        if (!other.unittest_.isEmpty()) {
          if (result.unittest_.isEmpty()) {
            result.unittest_ = new java.util.ArrayList<noop.model.proto.Noop.Unittest>();
          }
          result.unittest_.addAll(other.unittest_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              addSuperType(input.readString());
              break;
            }
            case 34: {
              noop.model.proto.Noop.Property.Builder subBuilder = noop.model.proto.Noop.Property.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addProperty(subBuilder.buildPartial());
              break;
            }
            case 42: {
              noop.model.proto.Noop.Method.Builder subBuilder = noop.model.proto.Noop.Method.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMethod(subBuilder.buildPartial());
              break;
            }
            case 50: {
              noop.model.proto.Noop.Unittest.Builder subBuilder = noop.model.proto.Noop.Unittest.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUnittest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // repeated string super_type = 3;
      public java.util.List<java.lang.String> getSuperTypeList() {
        return java.util.Collections.unmodifiableList(result.superType_);
      }
      public int getSuperTypeCount() {
        return result.getSuperTypeCount();
      }
      public java.lang.String getSuperType(int index) {
        return result.getSuperType(index);
      }
      public Builder setSuperType(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.superType_.set(index, value);
        return this;
      }
      public Builder addSuperType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.superType_.isEmpty()) {
          result.superType_ = new java.util.ArrayList<java.lang.String>();
        }
        result.superType_.add(value);
        return this;
      }
      public Builder addAllSuperType(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.superType_.isEmpty()) {
          result.superType_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.superType_);
        return this;
      }
      public Builder clearSuperType() {
        result.superType_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Property property = 4;
      public java.util.List<noop.model.proto.Noop.Property> getPropertyList() {
        return java.util.Collections.unmodifiableList(result.property_);
      }
      public int getPropertyCount() {
        return result.getPropertyCount();
      }
      public noop.model.proto.Noop.Property getProperty(int index) {
        return result.getProperty(index);
      }
      public Builder setProperty(int index, noop.model.proto.Noop.Property value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.property_.set(index, value);
        return this;
      }
      public Builder setProperty(int index, noop.model.proto.Noop.Property.Builder builderForValue) {
        result.property_.set(index, builderForValue.build());
        return this;
      }
      public Builder addProperty(noop.model.proto.Noop.Property value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.property_.isEmpty()) {
          result.property_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
        }
        result.property_.add(value);
        return this;
      }
      public Builder addProperty(noop.model.proto.Noop.Property.Builder builderForValue) {
        if (result.property_.isEmpty()) {
          result.property_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
        }
        result.property_.add(builderForValue.build());
        return this;
      }
      public Builder addAllProperty(
          java.lang.Iterable<? extends noop.model.proto.Noop.Property> values) {
        if (result.property_.isEmpty()) {
          result.property_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
        }
        super.addAll(values, result.property_);
        return this;
      }
      public Builder clearProperty() {
        result.property_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Method method = 5;
      public java.util.List<noop.model.proto.Noop.Method> getMethodList() {
        return java.util.Collections.unmodifiableList(result.method_);
      }
      public int getMethodCount() {
        return result.getMethodCount();
      }
      public noop.model.proto.Noop.Method getMethod(int index) {
        return result.getMethod(index);
      }
      public Builder setMethod(int index, noop.model.proto.Noop.Method value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.method_.set(index, value);
        return this;
      }
      public Builder setMethod(int index, noop.model.proto.Noop.Method.Builder builderForValue) {
        result.method_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMethod(noop.model.proto.Noop.Method value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.method_.isEmpty()) {
          result.method_ = new java.util.ArrayList<noop.model.proto.Noop.Method>();
        }
        result.method_.add(value);
        return this;
      }
      public Builder addMethod(noop.model.proto.Noop.Method.Builder builderForValue) {
        if (result.method_.isEmpty()) {
          result.method_ = new java.util.ArrayList<noop.model.proto.Noop.Method>();
        }
        result.method_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMethod(
          java.lang.Iterable<? extends noop.model.proto.Noop.Method> values) {
        if (result.method_.isEmpty()) {
          result.method_ = new java.util.ArrayList<noop.model.proto.Noop.Method>();
        }
        super.addAll(values, result.method_);
        return this;
      }
      public Builder clearMethod() {
        result.method_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Unittest unittest = 6;
      public java.util.List<noop.model.proto.Noop.Unittest> getUnittestList() {
        return java.util.Collections.unmodifiableList(result.unittest_);
      }
      public int getUnittestCount() {
        return result.getUnittestCount();
      }
      public noop.model.proto.Noop.Unittest getUnittest(int index) {
        return result.getUnittest(index);
      }
      public Builder setUnittest(int index, noop.model.proto.Noop.Unittest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.unittest_.set(index, value);
        return this;
      }
      public Builder setUnittest(int index, noop.model.proto.Noop.Unittest.Builder builderForValue) {
        result.unittest_.set(index, builderForValue.build());
        return this;
      }
      public Builder addUnittest(noop.model.proto.Noop.Unittest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.unittest_.isEmpty()) {
          result.unittest_ = new java.util.ArrayList<noop.model.proto.Noop.Unittest>();
        }
        result.unittest_.add(value);
        return this;
      }
      public Builder addUnittest(noop.model.proto.Noop.Unittest.Builder builderForValue) {
        if (result.unittest_.isEmpty()) {
          result.unittest_ = new java.util.ArrayList<noop.model.proto.Noop.Unittest>();
        }
        result.unittest_.add(builderForValue.build());
        return this;
      }
      public Builder addAllUnittest(
          java.lang.Iterable<? extends noop.model.proto.Noop.Unittest> values) {
        if (result.unittest_.isEmpty()) {
          result.unittest_ = new java.util.ArrayList<noop.model.proto.Noop.Unittest>();
        }
        super.addAll(values, result.unittest_);
        return this;
      }
      public Builder clearUnittest() {
        result.unittest_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Property extends
      com.google.protobuf.GeneratedMessage {
    // Use Property.newBuilder() to construct.
    private Property() {}
    
    private static final Property defaultInstance = new Property();
    public static Property getDefaultInstance() {
      return defaultInstance;
    }
    
    public Property getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Property_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Property_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required string type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // repeated .Modifier modifier = 3;
    public static final int MODIFIER_FIELD_NUMBER = 3;
    private java.util.List<noop.model.proto.Noop.Modifier> modifier_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Modifier> getModifierList() {
      return modifier_;
    }
    public int getModifierCount() { return modifier_.size(); }
    public noop.model.proto.Noop.Modifier getModifier(int index) {
      return modifier_.get(index);
    }
    
    // optional .Documentation documentation = 4;
    public static final int DOCUMENTATION_FIELD_NUMBER = 4;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasType) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasType()) {
        output.writeString(2, getType());
      }
      for (noop.model.proto.Noop.Modifier element : getModifierList()) {
        output.writeEnum(3, element.getNumber());
      }
      if (hasDocumentation()) {
        output.writeMessage(4, getDocumentation());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getType());
      }
      {
        int dataSize = 0;
        for (noop.model.proto.Noop.Modifier element : getModifierList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(element.getNumber());
        }
        size += dataSize;
        size += 1 * getModifierList().size();
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDocumentation());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Property parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Property parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Property parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Property parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Property prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Property result;
      
      // Construct using noop.model.proto.Noop.Property.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Property();
        return builder;
      }
      
      protected noop.model.proto.Noop.Property internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Property();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Property.getDescriptor();
      }
      
      public noop.model.proto.Noop.Property getDefaultInstanceForType() {
        return noop.model.proto.Noop.Property.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Property build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Property buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Property buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.modifier_ != java.util.Collections.EMPTY_LIST) {
          result.modifier_ =
            java.util.Collections.unmodifiableList(result.modifier_);
        }
        noop.model.proto.Noop.Property returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Property) {
          return mergeFrom((noop.model.proto.Noop.Property)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Property other) {
        if (other == noop.model.proto.Noop.Property.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.modifier_.isEmpty()) {
          if (result.modifier_.isEmpty()) {
            result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
          }
          result.modifier_.addAll(other.modifier_);
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setType(input.readString());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              noop.model.proto.Noop.Modifier value = noop.model.proto.Noop.Modifier.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                addModifier(value);
              }
              break;
            }
            case 34: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required string type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // repeated .Modifier modifier = 3;
      public java.util.List<noop.model.proto.Noop.Modifier> getModifierList() {
        return java.util.Collections.unmodifiableList(result.modifier_);
      }
      public int getModifierCount() {
        return result.getModifierCount();
      }
      public noop.model.proto.Noop.Modifier getModifier(int index) {
        return result.getModifier(index);
      }
      public Builder setModifier(int index, noop.model.proto.Noop.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.modifier_.set(index, value);
        return this;
      }
      public Builder addModifier(noop.model.proto.Noop.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.modifier_.isEmpty()) {
          result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
        }
        result.modifier_.add(value);
        return this;
      }
      public Builder addAllModifier(
          java.lang.Iterable<? extends noop.model.proto.Noop.Modifier> values) {
        if (result.modifier_.isEmpty()) {
          result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
        }
        super.addAll(values, result.modifier_);
        return this;
      }
      public Builder clearModifier() {
        result.modifier_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .Documentation documentation = 4;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Binding extends
      com.google.protobuf.GeneratedMessage {
    // Use Binding.newBuilder() to construct.
    private Binding() {}
    
    private static final Binding defaultInstance = new Binding();
    public static Binding getDefaultInstance() {
      return defaultInstance;
    }
    
    public Binding getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Binding_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Binding_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // repeated .Modifier modifier = 3;
    public static final int MODIFIER_FIELD_NUMBER = 3;
    private java.util.List<noop.model.proto.Noop.Modifier> modifier_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Modifier> getModifierList() {
      return modifier_;
    }
    public int getModifierCount() { return modifier_.size(); }
    public noop.model.proto.Noop.Modifier getModifier(int index) {
      return modifier_.get(index);
    }
    
    // required .BindingBlock block = 4;
    public static final int BLOCK_FIELD_NUMBER = 4;
    private boolean hasBlock;
    private noop.model.proto.Noop.BindingBlock block_ = noop.model.proto.Noop.BindingBlock.getDefaultInstance();
    public boolean hasBlock() { return hasBlock; }
    public noop.model.proto.Noop.BindingBlock getBlock() { return block_; }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasBlock) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      if (!getBlock().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      for (noop.model.proto.Noop.Modifier element : getModifierList()) {
        output.writeEnum(3, element.getNumber());
      }
      if (hasBlock()) {
        output.writeMessage(4, getBlock());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      {
        int dataSize = 0;
        for (noop.model.proto.Noop.Modifier element : getModifierList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(element.getNumber());
        }
        size += dataSize;
        size += 1 * getModifierList().size();
      }
      if (hasBlock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBlock());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Binding parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Binding parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Binding prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Binding result;
      
      // Construct using noop.model.proto.Noop.Binding.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Binding();
        return builder;
      }
      
      protected noop.model.proto.Noop.Binding internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Binding();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Binding.getDescriptor();
      }
      
      public noop.model.proto.Noop.Binding getDefaultInstanceForType() {
        return noop.model.proto.Noop.Binding.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Binding build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Binding buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Binding buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.modifier_ != java.util.Collections.EMPTY_LIST) {
          result.modifier_ =
            java.util.Collections.unmodifiableList(result.modifier_);
        }
        noop.model.proto.Noop.Binding returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Binding) {
          return mergeFrom((noop.model.proto.Noop.Binding)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Binding other) {
        if (other == noop.model.proto.Noop.Binding.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (!other.modifier_.isEmpty()) {
          if (result.modifier_.isEmpty()) {
            result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
          }
          result.modifier_.addAll(other.modifier_);
        }
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              noop.model.proto.Noop.Modifier value = noop.model.proto.Noop.Modifier.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                addModifier(value);
              }
              break;
            }
            case 34: {
              noop.model.proto.Noop.BindingBlock.Builder subBuilder = noop.model.proto.Noop.BindingBlock.newBuilder();
              if (hasBlock()) {
                subBuilder.mergeFrom(getBlock());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlock(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // repeated .Modifier modifier = 3;
      public java.util.List<noop.model.proto.Noop.Modifier> getModifierList() {
        return java.util.Collections.unmodifiableList(result.modifier_);
      }
      public int getModifierCount() {
        return result.getModifierCount();
      }
      public noop.model.proto.Noop.Modifier getModifier(int index) {
        return result.getModifier(index);
      }
      public Builder setModifier(int index, noop.model.proto.Noop.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.modifier_.set(index, value);
        return this;
      }
      public Builder addModifier(noop.model.proto.Noop.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.modifier_.isEmpty()) {
          result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
        }
        result.modifier_.add(value);
        return this;
      }
      public Builder addAllModifier(
          java.lang.Iterable<? extends noop.model.proto.Noop.Modifier> values) {
        if (result.modifier_.isEmpty()) {
          result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
        }
        super.addAll(values, result.modifier_);
        return this;
      }
      public Builder clearModifier() {
        result.modifier_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required .BindingBlock block = 4;
      public boolean hasBlock() {
        return result.hasBlock();
      }
      public noop.model.proto.Noop.BindingBlock getBlock() {
        return result.getBlock();
      }
      public Builder setBlock(noop.model.proto.Noop.BindingBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBlock = true;
        result.block_ = value;
        return this;
      }
      public Builder setBlock(noop.model.proto.Noop.BindingBlock.Builder builderForValue) {
        result.hasBlock = true;
        result.block_ = builderForValue.build();
        return this;
      }
      public Builder mergeBlock(noop.model.proto.Noop.BindingBlock value) {
        if (result.hasBlock() &&
            result.block_ != noop.model.proto.Noop.BindingBlock.getDefaultInstance()) {
          result.block_ =
            noop.model.proto.Noop.BindingBlock.newBuilder(result.block_).mergeFrom(value).buildPartial();
        } else {
          result.block_ = value;
        }
        result.hasBlock = true;
        return this;
      }
      public Builder clearBlock() {
        result.hasBlock = false;
        result.block_ = noop.model.proto.Noop.BindingBlock.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Interface extends
      com.google.protobuf.GeneratedMessage {
    // Use Interface.newBuilder() to construct.
    private Interface() {}
    
    private static final Interface defaultInstance = new Interface();
    public static Interface getDefaultInstance() {
      return defaultInstance;
    }
    
    public Interface getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Interface_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Interface_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // repeated .MethodSignature method = 3;
    public static final int METHOD_FIELD_NUMBER = 3;
    private java.util.List<noop.model.proto.Noop.MethodSignature> method_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.MethodSignature> getMethodList() {
      return method_;
    }
    public int getMethodCount() { return method_.size(); }
    public noop.model.proto.Noop.MethodSignature getMethod(int index) {
      return method_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      for (noop.model.proto.Noop.MethodSignature element : getMethodList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      for (noop.model.proto.Noop.MethodSignature element : getMethodList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      for (noop.model.proto.Noop.MethodSignature element : getMethodList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Interface parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Interface parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Interface prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Interface result;
      
      // Construct using noop.model.proto.Noop.Interface.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Interface();
        return builder;
      }
      
      protected noop.model.proto.Noop.Interface internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Interface();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Interface.getDescriptor();
      }
      
      public noop.model.proto.Noop.Interface getDefaultInstanceForType() {
        return noop.model.proto.Noop.Interface.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Interface build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Interface buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Interface buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.method_ != java.util.Collections.EMPTY_LIST) {
          result.method_ =
            java.util.Collections.unmodifiableList(result.method_);
        }
        noop.model.proto.Noop.Interface returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Interface) {
          return mergeFrom((noop.model.proto.Noop.Interface)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Interface other) {
        if (other == noop.model.proto.Noop.Interface.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (!other.method_.isEmpty()) {
          if (result.method_.isEmpty()) {
            result.method_ = new java.util.ArrayList<noop.model.proto.Noop.MethodSignature>();
          }
          result.method_.addAll(other.method_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              noop.model.proto.Noop.MethodSignature.Builder subBuilder = noop.model.proto.Noop.MethodSignature.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMethod(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // repeated .MethodSignature method = 3;
      public java.util.List<noop.model.proto.Noop.MethodSignature> getMethodList() {
        return java.util.Collections.unmodifiableList(result.method_);
      }
      public int getMethodCount() {
        return result.getMethodCount();
      }
      public noop.model.proto.Noop.MethodSignature getMethod(int index) {
        return result.getMethod(index);
      }
      public Builder setMethod(int index, noop.model.proto.Noop.MethodSignature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.method_.set(index, value);
        return this;
      }
      public Builder setMethod(int index, noop.model.proto.Noop.MethodSignature.Builder builderForValue) {
        result.method_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMethod(noop.model.proto.Noop.MethodSignature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.method_.isEmpty()) {
          result.method_ = new java.util.ArrayList<noop.model.proto.Noop.MethodSignature>();
        }
        result.method_.add(value);
        return this;
      }
      public Builder addMethod(noop.model.proto.Noop.MethodSignature.Builder builderForValue) {
        if (result.method_.isEmpty()) {
          result.method_ = new java.util.ArrayList<noop.model.proto.Noop.MethodSignature>();
        }
        result.method_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMethod(
          java.lang.Iterable<? extends noop.model.proto.Noop.MethodSignature> values) {
        if (result.method_.isEmpty()) {
          result.method_ = new java.util.ArrayList<noop.model.proto.Noop.MethodSignature>();
        }
        super.addAll(values, result.method_);
        return this;
      }
      public Builder clearMethod() {
        result.method_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Alias extends
      com.google.protobuf.GeneratedMessage {
    // Use Alias.newBuilder() to construct.
    private Alias() {}
    
    private static final Alias defaultInstance = new Alias();
    public static Alias getDefaultInstance() {
      return defaultInstance;
    }
    
    public Alias getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Alias_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Alias_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // required string of = 3;
    public static final int OF_FIELD_NUMBER = 3;
    private boolean hasOf;
    private java.lang.String of_ = "";
    public boolean hasOf() { return hasOf; }
    public java.lang.String getOf() { return of_; }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasOf) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      if (hasOf()) {
        output.writeString(3, getOf());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      if (hasOf()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getOf());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Alias parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Alias parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Alias prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Alias result;
      
      // Construct using noop.model.proto.Noop.Alias.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Alias();
        return builder;
      }
      
      protected noop.model.proto.Noop.Alias internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Alias();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Alias.getDescriptor();
      }
      
      public noop.model.proto.Noop.Alias getDefaultInstanceForType() {
        return noop.model.proto.Noop.Alias.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Alias build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Alias buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Alias buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        noop.model.proto.Noop.Alias returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Alias) {
          return mergeFrom((noop.model.proto.Noop.Alias)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Alias other) {
        if (other == noop.model.proto.Noop.Alias.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (other.hasOf()) {
          setOf(other.getOf());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              setOf(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // required string of = 3;
      public boolean hasOf() {
        return result.hasOf();
      }
      public java.lang.String getOf() {
        return result.getOf();
      }
      public Builder setOf(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOf = true;
        result.of_ = value;
        return this;
      }
      public Builder clearOf() {
        result.hasOf = false;
        result.of_ = getDefaultInstance().getOf();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class MethodSignature extends
      com.google.protobuf.GeneratedMessage {
    // Use MethodSignature.newBuilder() to construct.
    private MethodSignature() {}
    
    private static final MethodSignature defaultInstance = new MethodSignature();
    public static MethodSignature getDefaultInstance() {
      return defaultInstance;
    }
    
    public MethodSignature getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_MethodSignature_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_MethodSignature_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // repeated .Modifier modifier = 3;
    public static final int MODIFIER_FIELD_NUMBER = 3;
    private java.util.List<noop.model.proto.Noop.Modifier> modifier_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Modifier> getModifierList() {
      return modifier_;
    }
    public int getModifierCount() { return modifier_.size(); }
    public noop.model.proto.Noop.Modifier getModifier(int index) {
      return modifier_.get(index);
    }
    
    // repeated string return_type = 4;
    public static final int RETURN_TYPE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.String> returnType_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getReturnTypeList() {
      return returnType_;
    }
    public int getReturnTypeCount() { return returnType_.size(); }
    public java.lang.String getReturnType(int index) {
      return returnType_.get(index);
    }
    
    // repeated .Property argument = 5;
    public static final int ARGUMENT_FIELD_NUMBER = 5;
    private java.util.List<noop.model.proto.Noop.Property> argument_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Property> getArgumentList() {
      return argument_;
    }
    public int getArgumentCount() { return argument_.size(); }
    public noop.model.proto.Noop.Property getArgument(int index) {
      return argument_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      for (noop.model.proto.Noop.Property element : getArgumentList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      for (noop.model.proto.Noop.Modifier element : getModifierList()) {
        output.writeEnum(3, element.getNumber());
      }
      for (java.lang.String element : getReturnTypeList()) {
        output.writeString(4, element);
      }
      for (noop.model.proto.Noop.Property element : getArgumentList()) {
        output.writeMessage(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      {
        int dataSize = 0;
        for (noop.model.proto.Noop.Modifier element : getModifierList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(element.getNumber());
        }
        size += dataSize;
        size += 1 * getModifierList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getReturnTypeList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getReturnTypeList().size();
      }
      for (noop.model.proto.Noop.Property element : getArgumentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.MethodSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.MethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.MethodSignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.MethodSignature result;
      
      // Construct using noop.model.proto.Noop.MethodSignature.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.MethodSignature();
        return builder;
      }
      
      protected noop.model.proto.Noop.MethodSignature internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.MethodSignature();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.MethodSignature.getDescriptor();
      }
      
      public noop.model.proto.Noop.MethodSignature getDefaultInstanceForType() {
        return noop.model.proto.Noop.MethodSignature.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.MethodSignature build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.MethodSignature buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.MethodSignature buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.modifier_ != java.util.Collections.EMPTY_LIST) {
          result.modifier_ =
            java.util.Collections.unmodifiableList(result.modifier_);
        }
        if (result.returnType_ != java.util.Collections.EMPTY_LIST) {
          result.returnType_ =
            java.util.Collections.unmodifiableList(result.returnType_);
        }
        if (result.argument_ != java.util.Collections.EMPTY_LIST) {
          result.argument_ =
            java.util.Collections.unmodifiableList(result.argument_);
        }
        noop.model.proto.Noop.MethodSignature returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.MethodSignature) {
          return mergeFrom((noop.model.proto.Noop.MethodSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.MethodSignature other) {
        if (other == noop.model.proto.Noop.MethodSignature.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (!other.modifier_.isEmpty()) {
          if (result.modifier_.isEmpty()) {
            result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
          }
          result.modifier_.addAll(other.modifier_);
        }
        if (!other.returnType_.isEmpty()) {
          if (result.returnType_.isEmpty()) {
            result.returnType_ = new java.util.ArrayList<java.lang.String>();
          }
          result.returnType_.addAll(other.returnType_);
        }
        if (!other.argument_.isEmpty()) {
          if (result.argument_.isEmpty()) {
            result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
          }
          result.argument_.addAll(other.argument_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              noop.model.proto.Noop.Modifier value = noop.model.proto.Noop.Modifier.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                addModifier(value);
              }
              break;
            }
            case 34: {
              addReturnType(input.readString());
              break;
            }
            case 42: {
              noop.model.proto.Noop.Property.Builder subBuilder = noop.model.proto.Noop.Property.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addArgument(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // repeated .Modifier modifier = 3;
      public java.util.List<noop.model.proto.Noop.Modifier> getModifierList() {
        return java.util.Collections.unmodifiableList(result.modifier_);
      }
      public int getModifierCount() {
        return result.getModifierCount();
      }
      public noop.model.proto.Noop.Modifier getModifier(int index) {
        return result.getModifier(index);
      }
      public Builder setModifier(int index, noop.model.proto.Noop.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.modifier_.set(index, value);
        return this;
      }
      public Builder addModifier(noop.model.proto.Noop.Modifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.modifier_.isEmpty()) {
          result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
        }
        result.modifier_.add(value);
        return this;
      }
      public Builder addAllModifier(
          java.lang.Iterable<? extends noop.model.proto.Noop.Modifier> values) {
        if (result.modifier_.isEmpty()) {
          result.modifier_ = new java.util.ArrayList<noop.model.proto.Noop.Modifier>();
        }
        super.addAll(values, result.modifier_);
        return this;
      }
      public Builder clearModifier() {
        result.modifier_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string return_type = 4;
      public java.util.List<java.lang.String> getReturnTypeList() {
        return java.util.Collections.unmodifiableList(result.returnType_);
      }
      public int getReturnTypeCount() {
        return result.getReturnTypeCount();
      }
      public java.lang.String getReturnType(int index) {
        return result.getReturnType(index);
      }
      public Builder setReturnType(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.returnType_.set(index, value);
        return this;
      }
      public Builder addReturnType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.returnType_.isEmpty()) {
          result.returnType_ = new java.util.ArrayList<java.lang.String>();
        }
        result.returnType_.add(value);
        return this;
      }
      public Builder addAllReturnType(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.returnType_.isEmpty()) {
          result.returnType_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.returnType_);
        return this;
      }
      public Builder clearReturnType() {
        result.returnType_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Property argument = 5;
      public java.util.List<noop.model.proto.Noop.Property> getArgumentList() {
        return java.util.Collections.unmodifiableList(result.argument_);
      }
      public int getArgumentCount() {
        return result.getArgumentCount();
      }
      public noop.model.proto.Noop.Property getArgument(int index) {
        return result.getArgument(index);
      }
      public Builder setArgument(int index, noop.model.proto.Noop.Property value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.argument_.set(index, value);
        return this;
      }
      public Builder setArgument(int index, noop.model.proto.Noop.Property.Builder builderForValue) {
        result.argument_.set(index, builderForValue.build());
        return this;
      }
      public Builder addArgument(noop.model.proto.Noop.Property value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.argument_.isEmpty()) {
          result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
        }
        result.argument_.add(value);
        return this;
      }
      public Builder addArgument(noop.model.proto.Noop.Property.Builder builderForValue) {
        if (result.argument_.isEmpty()) {
          result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
        }
        result.argument_.add(builderForValue.build());
        return this;
      }
      public Builder addAllArgument(
          java.lang.Iterable<? extends noop.model.proto.Noop.Property> values) {
        if (result.argument_.isEmpty()) {
          result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Property>();
        }
        super.addAll(values, result.argument_);
        return this;
      }
      public Builder clearArgument() {
        result.argument_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Method extends
      com.google.protobuf.GeneratedMessage {
    // Use Method.newBuilder() to construct.
    private Method() {}
    
    private static final Method defaultInstance = new Method();
    public static Method getDefaultInstance() {
      return defaultInstance;
    }
    
    public Method getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Method_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Method_fieldAccessorTable;
    }
    
    // required .MethodSignature signature = 1;
    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private boolean hasSignature;
    private noop.model.proto.Noop.MethodSignature signature_ = noop.model.proto.Noop.MethodSignature.getDefaultInstance();
    public boolean hasSignature() { return hasSignature; }
    public noop.model.proto.Noop.MethodSignature getSignature() { return signature_; }
    
    // required .Block block = 2;
    public static final int BLOCK_FIELD_NUMBER = 2;
    private boolean hasBlock;
    private noop.model.proto.Noop.Block block_ = noop.model.proto.Noop.Block.getDefaultInstance();
    public boolean hasBlock() { return hasBlock; }
    public noop.model.proto.Noop.Block getBlock() { return block_; }
    
    public final boolean isInitialized() {
      if (!hasSignature) return false;
      if (!hasBlock) return false;
      if (!getSignature().isInitialized()) return false;
      if (!getBlock().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasSignature()) {
        output.writeMessage(1, getSignature());
      }
      if (hasBlock()) {
        output.writeMessage(2, getBlock());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSignature()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSignature());
      }
      if (hasBlock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBlock());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Method parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Method parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Method parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Method parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Method prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Method result;
      
      // Construct using noop.model.proto.Noop.Method.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Method();
        return builder;
      }
      
      protected noop.model.proto.Noop.Method internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Method();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Method.getDescriptor();
      }
      
      public noop.model.proto.Noop.Method getDefaultInstanceForType() {
        return noop.model.proto.Noop.Method.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Method build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Method buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Method buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        noop.model.proto.Noop.Method returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Method) {
          return mergeFrom((noop.model.proto.Noop.Method)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Method other) {
        if (other == noop.model.proto.Noop.Method.getDefaultInstance()) return this;
        if (other.hasSignature()) {
          mergeSignature(other.getSignature());
        }
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              noop.model.proto.Noop.MethodSignature.Builder subBuilder = noop.model.proto.Noop.MethodSignature.newBuilder();
              if (hasSignature()) {
                subBuilder.mergeFrom(getSignature());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSignature(subBuilder.buildPartial());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Block.Builder subBuilder = noop.model.proto.Noop.Block.newBuilder();
              if (hasBlock()) {
                subBuilder.mergeFrom(getBlock());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlock(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .MethodSignature signature = 1;
      public boolean hasSignature() {
        return result.hasSignature();
      }
      public noop.model.proto.Noop.MethodSignature getSignature() {
        return result.getSignature();
      }
      public Builder setSignature(noop.model.proto.Noop.MethodSignature value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSignature = true;
        result.signature_ = value;
        return this;
      }
      public Builder setSignature(noop.model.proto.Noop.MethodSignature.Builder builderForValue) {
        result.hasSignature = true;
        result.signature_ = builderForValue.build();
        return this;
      }
      public Builder mergeSignature(noop.model.proto.Noop.MethodSignature value) {
        if (result.hasSignature() &&
            result.signature_ != noop.model.proto.Noop.MethodSignature.getDefaultInstance()) {
          result.signature_ =
            noop.model.proto.Noop.MethodSignature.newBuilder(result.signature_).mergeFrom(value).buildPartial();
        } else {
          result.signature_ = value;
        }
        result.hasSignature = true;
        return this;
      }
      public Builder clearSignature() {
        result.hasSignature = false;
        result.signature_ = noop.model.proto.Noop.MethodSignature.getDefaultInstance();
        return this;
      }
      
      // required .Block block = 2;
      public boolean hasBlock() {
        return result.hasBlock();
      }
      public noop.model.proto.Noop.Block getBlock() {
        return result.getBlock();
      }
      public Builder setBlock(noop.model.proto.Noop.Block value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBlock = true;
        result.block_ = value;
        return this;
      }
      public Builder setBlock(noop.model.proto.Noop.Block.Builder builderForValue) {
        result.hasBlock = true;
        result.block_ = builderForValue.build();
        return this;
      }
      public Builder mergeBlock(noop.model.proto.Noop.Block value) {
        if (result.hasBlock() &&
            result.block_ != noop.model.proto.Noop.Block.getDefaultInstance()) {
          result.block_ =
            noop.model.proto.Noop.Block.newBuilder(result.block_).mergeFrom(value).buildPartial();
        } else {
          result.block_ = value;
        }
        result.hasBlock = true;
        return this;
      }
      public Builder clearBlock() {
        result.hasBlock = false;
        result.block_ = noop.model.proto.Noop.Block.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class BindingBlock extends
      com.google.protobuf.GeneratedMessage {
    // Use BindingBlock.newBuilder() to construct.
    private BindingBlock() {}
    
    private static final BindingBlock defaultInstance = new BindingBlock();
    public static BindingBlock getDefaultInstance() {
      return defaultInstance;
    }
    
    public BindingBlock getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_BindingBlock_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_BindingBlock_fieldAccessorTable;
    }
    
    // repeated .BindOperator bind = 1;
    public static final int BIND_FIELD_NUMBER = 1;
    private java.util.List<noop.model.proto.Noop.BindOperator> bind_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.BindOperator> getBindList() {
      return bind_;
    }
    public int getBindCount() { return bind_.size(); }
    public noop.model.proto.Noop.BindOperator getBind(int index) {
      return bind_.get(index);
    }
    
    public final boolean isInitialized() {
      for (noop.model.proto.Noop.BindOperator element : getBindList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (noop.model.proto.Noop.BindOperator element : getBindList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (noop.model.proto.Noop.BindOperator element : getBindList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.BindingBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.BindingBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.BindingBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.BindingBlock result;
      
      // Construct using noop.model.proto.Noop.BindingBlock.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.BindingBlock();
        return builder;
      }
      
      protected noop.model.proto.Noop.BindingBlock internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.BindingBlock();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.BindingBlock.getDescriptor();
      }
      
      public noop.model.proto.Noop.BindingBlock getDefaultInstanceForType() {
        return noop.model.proto.Noop.BindingBlock.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.BindingBlock build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.BindingBlock buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.BindingBlock buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.bind_ != java.util.Collections.EMPTY_LIST) {
          result.bind_ =
            java.util.Collections.unmodifiableList(result.bind_);
        }
        noop.model.proto.Noop.BindingBlock returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.BindingBlock) {
          return mergeFrom((noop.model.proto.Noop.BindingBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.BindingBlock other) {
        if (other == noop.model.proto.Noop.BindingBlock.getDefaultInstance()) return this;
        if (!other.bind_.isEmpty()) {
          if (result.bind_.isEmpty()) {
            result.bind_ = new java.util.ArrayList<noop.model.proto.Noop.BindOperator>();
          }
          result.bind_.addAll(other.bind_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              noop.model.proto.Noop.BindOperator.Builder subBuilder = noop.model.proto.Noop.BindOperator.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addBind(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .BindOperator bind = 1;
      public java.util.List<noop.model.proto.Noop.BindOperator> getBindList() {
        return java.util.Collections.unmodifiableList(result.bind_);
      }
      public int getBindCount() {
        return result.getBindCount();
      }
      public noop.model.proto.Noop.BindOperator getBind(int index) {
        return result.getBind(index);
      }
      public Builder setBind(int index, noop.model.proto.Noop.BindOperator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.bind_.set(index, value);
        return this;
      }
      public Builder setBind(int index, noop.model.proto.Noop.BindOperator.Builder builderForValue) {
        result.bind_.set(index, builderForValue.build());
        return this;
      }
      public Builder addBind(noop.model.proto.Noop.BindOperator value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.bind_.isEmpty()) {
          result.bind_ = new java.util.ArrayList<noop.model.proto.Noop.BindOperator>();
        }
        result.bind_.add(value);
        return this;
      }
      public Builder addBind(noop.model.proto.Noop.BindOperator.Builder builderForValue) {
        if (result.bind_.isEmpty()) {
          result.bind_ = new java.util.ArrayList<noop.model.proto.Noop.BindOperator>();
        }
        result.bind_.add(builderForValue.build());
        return this;
      }
      public Builder addAllBind(
          java.lang.Iterable<? extends noop.model.proto.Noop.BindOperator> values) {
        if (result.bind_.isEmpty()) {
          result.bind_ = new java.util.ArrayList<noop.model.proto.Noop.BindOperator>();
        }
        super.addAll(values, result.bind_);
        return this;
      }
      public Builder clearBind() {
        result.bind_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class BindOperator extends
      com.google.protobuf.GeneratedMessage {
    // Use BindOperator.newBuilder() to construct.
    private BindOperator() {}
    
    private static final BindOperator defaultInstance = new BindOperator();
    public static BindOperator getDefaultInstance() {
      return defaultInstance;
    }
    
    public BindOperator getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_BindOperator_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_BindOperator_fieldAccessorTable;
    }
    
    // required string type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private java.lang.String type_ = "";
    public boolean hasType() { return hasType; }
    public java.lang.String getType() { return type_; }
    
    // required .Expression boundTo = 2;
    public static final int BOUNDTO_FIELD_NUMBER = 2;
    private boolean hasBoundTo;
    private noop.model.proto.Noop.Expression boundTo_ = noop.model.proto.Noop.Expression.getDefaultInstance();
    public boolean hasBoundTo() { return hasBoundTo; }
    public noop.model.proto.Noop.Expression getBoundTo() { return boundTo_; }
    
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (!hasBoundTo) return false;
      if (!getBoundTo().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasType()) {
        output.writeString(1, getType());
      }
      if (hasBoundTo()) {
        output.writeMessage(2, getBoundTo());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getType());
      }
      if (hasBoundTo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBoundTo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.BindOperator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.BindOperator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.BindOperator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.BindOperator result;
      
      // Construct using noop.model.proto.Noop.BindOperator.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.BindOperator();
        return builder;
      }
      
      protected noop.model.proto.Noop.BindOperator internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.BindOperator();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.BindOperator.getDescriptor();
      }
      
      public noop.model.proto.Noop.BindOperator getDefaultInstanceForType() {
        return noop.model.proto.Noop.BindOperator.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.BindOperator build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.BindOperator buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.BindOperator buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        noop.model.proto.Noop.BindOperator returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.BindOperator) {
          return mergeFrom((noop.model.proto.Noop.BindOperator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.BindOperator other) {
        if (other == noop.model.proto.Noop.BindOperator.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBoundTo()) {
          mergeBoundTo(other.getBoundTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setType(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Expression.Builder subBuilder = noop.model.proto.Noop.Expression.newBuilder();
              if (hasBoundTo()) {
                subBuilder.mergeFrom(getBoundTo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBoundTo(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public java.lang.String getType() {
        return result.getType();
      }
      public Builder setType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = getDefaultInstance().getType();
        return this;
      }
      
      // required .Expression boundTo = 2;
      public boolean hasBoundTo() {
        return result.hasBoundTo();
      }
      public noop.model.proto.Noop.Expression getBoundTo() {
        return result.getBoundTo();
      }
      public Builder setBoundTo(noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBoundTo = true;
        result.boundTo_ = value;
        return this;
      }
      public Builder setBoundTo(noop.model.proto.Noop.Expression.Builder builderForValue) {
        result.hasBoundTo = true;
        result.boundTo_ = builderForValue.build();
        return this;
      }
      public Builder mergeBoundTo(noop.model.proto.Noop.Expression value) {
        if (result.hasBoundTo() &&
            result.boundTo_ != noop.model.proto.Noop.Expression.getDefaultInstance()) {
          result.boundTo_ =
            noop.model.proto.Noop.Expression.newBuilder(result.boundTo_).mergeFrom(value).buildPartial();
        } else {
          result.boundTo_ = value;
        }
        result.hasBoundTo = true;
        return this;
      }
      public Builder clearBoundTo() {
        result.hasBoundTo = false;
        result.boundTo_ = noop.model.proto.Noop.Expression.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Block extends
      com.google.protobuf.GeneratedMessage {
    // Use Block.newBuilder() to construct.
    private Block() {}
    
    private static final Block defaultInstance = new Block();
    public static Block getDefaultInstance() {
      return defaultInstance;
    }
    
    public Block getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Block_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Block_fieldAccessorTable;
    }
    
    // repeated .Expression expression = 1;
    public static final int EXPRESSION_FIELD_NUMBER = 1;
    private java.util.List<noop.model.proto.Noop.Expression> expression_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Expression> getExpressionList() {
      return expression_;
    }
    public int getExpressionCount() { return expression_.size(); }
    public noop.model.proto.Noop.Expression getExpression(int index) {
      return expression_.get(index);
    }
    
    public final boolean isInitialized() {
      for (noop.model.proto.Noop.Expression element : getExpressionList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (noop.model.proto.Noop.Expression element : getExpressionList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (noop.model.proto.Noop.Expression element : getExpressionList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Block parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Block parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Block parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Block parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Block prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Block result;
      
      // Construct using noop.model.proto.Noop.Block.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Block();
        return builder;
      }
      
      protected noop.model.proto.Noop.Block internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Block();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Block.getDescriptor();
      }
      
      public noop.model.proto.Noop.Block getDefaultInstanceForType() {
        return noop.model.proto.Noop.Block.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Block build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Block buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Block buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.expression_ != java.util.Collections.EMPTY_LIST) {
          result.expression_ =
            java.util.Collections.unmodifiableList(result.expression_);
        }
        noop.model.proto.Noop.Block returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Block) {
          return mergeFrom((noop.model.proto.Noop.Block)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Block other) {
        if (other == noop.model.proto.Noop.Block.getDefaultInstance()) return this;
        if (!other.expression_.isEmpty()) {
          if (result.expression_.isEmpty()) {
            result.expression_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
          }
          result.expression_.addAll(other.expression_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              noop.model.proto.Noop.Expression.Builder subBuilder = noop.model.proto.Noop.Expression.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addExpression(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .Expression expression = 1;
      public java.util.List<noop.model.proto.Noop.Expression> getExpressionList() {
        return java.util.Collections.unmodifiableList(result.expression_);
      }
      public int getExpressionCount() {
        return result.getExpressionCount();
      }
      public noop.model.proto.Noop.Expression getExpression(int index) {
        return result.getExpression(index);
      }
      public Builder setExpression(int index, noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.expression_.set(index, value);
        return this;
      }
      public Builder setExpression(int index, noop.model.proto.Noop.Expression.Builder builderForValue) {
        result.expression_.set(index, builderForValue.build());
        return this;
      }
      public Builder addExpression(noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.expression_.isEmpty()) {
          result.expression_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
        }
        result.expression_.add(value);
        return this;
      }
      public Builder addExpression(noop.model.proto.Noop.Expression.Builder builderForValue) {
        if (result.expression_.isEmpty()) {
          result.expression_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
        }
        result.expression_.add(builderForValue.build());
        return this;
      }
      public Builder addAllExpression(
          java.lang.Iterable<? extends noop.model.proto.Noop.Expression> values) {
        if (result.expression_.isEmpty()) {
          result.expression_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
        }
        super.addAll(values, result.expression_);
        return this;
      }
      public Builder clearExpression() {
        result.expression_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class MethodInvocation extends
      com.google.protobuf.GeneratedMessage {
    // Use MethodInvocation.newBuilder() to construct.
    private MethodInvocation() {}
    
    private static final MethodInvocation defaultInstance = new MethodInvocation();
    public static MethodInvocation getDefaultInstance() {
      return defaultInstance;
    }
    
    public MethodInvocation getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_MethodInvocation_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_MethodInvocation_fieldAccessorTable;
    }
    
    // required .Expression lhs = 1;
    public static final int LHS_FIELD_NUMBER = 1;
    private boolean hasLhs;
    private noop.model.proto.Noop.Expression lhs_ = noop.model.proto.Noop.Expression.getDefaultInstance();
    public boolean hasLhs() { return hasLhs; }
    public noop.model.proto.Noop.Expression getLhs() { return lhs_; }
    
    // required string method = 2;
    public static final int METHOD_FIELD_NUMBER = 2;
    private boolean hasMethod;
    private java.lang.String method_ = "";
    public boolean hasMethod() { return hasMethod; }
    public java.lang.String getMethod() { return method_; }
    
    // repeated .Expression argument = 3;
    public static final int ARGUMENT_FIELD_NUMBER = 3;
    private java.util.List<noop.model.proto.Noop.Expression> argument_ =
      java.util.Collections.emptyList();
    public java.util.List<noop.model.proto.Noop.Expression> getArgumentList() {
      return argument_;
    }
    public int getArgumentCount() { return argument_.size(); }
    public noop.model.proto.Noop.Expression getArgument(int index) {
      return argument_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasLhs) return false;
      if (!hasMethod) return false;
      if (!getLhs().isInitialized()) return false;
      for (noop.model.proto.Noop.Expression element : getArgumentList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasLhs()) {
        output.writeMessage(1, getLhs());
      }
      if (hasMethod()) {
        output.writeString(2, getMethod());
      }
      for (noop.model.proto.Noop.Expression element : getArgumentList()) {
        output.writeMessage(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLhs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLhs());
      }
      if (hasMethod()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMethod());
      }
      for (noop.model.proto.Noop.Expression element : getArgumentList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.MethodInvocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.MethodInvocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.MethodInvocation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.MethodInvocation result;
      
      // Construct using noop.model.proto.Noop.MethodInvocation.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.MethodInvocation();
        return builder;
      }
      
      protected noop.model.proto.Noop.MethodInvocation internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.MethodInvocation();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.MethodInvocation.getDescriptor();
      }
      
      public noop.model.proto.Noop.MethodInvocation getDefaultInstanceForType() {
        return noop.model.proto.Noop.MethodInvocation.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.MethodInvocation build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.MethodInvocation buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.MethodInvocation buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.argument_ != java.util.Collections.EMPTY_LIST) {
          result.argument_ =
            java.util.Collections.unmodifiableList(result.argument_);
        }
        noop.model.proto.Noop.MethodInvocation returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.MethodInvocation) {
          return mergeFrom((noop.model.proto.Noop.MethodInvocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.MethodInvocation other) {
        if (other == noop.model.proto.Noop.MethodInvocation.getDefaultInstance()) return this;
        if (other.hasLhs()) {
          mergeLhs(other.getLhs());
        }
        if (other.hasMethod()) {
          setMethod(other.getMethod());
        }
        if (!other.argument_.isEmpty()) {
          if (result.argument_.isEmpty()) {
            result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
          }
          result.argument_.addAll(other.argument_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              noop.model.proto.Noop.Expression.Builder subBuilder = noop.model.proto.Noop.Expression.newBuilder();
              if (hasLhs()) {
                subBuilder.mergeFrom(getLhs());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLhs(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setMethod(input.readString());
              break;
            }
            case 26: {
              noop.model.proto.Noop.Expression.Builder subBuilder = noop.model.proto.Noop.Expression.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addArgument(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .Expression lhs = 1;
      public boolean hasLhs() {
        return result.hasLhs();
      }
      public noop.model.proto.Noop.Expression getLhs() {
        return result.getLhs();
      }
      public Builder setLhs(noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLhs = true;
        result.lhs_ = value;
        return this;
      }
      public Builder setLhs(noop.model.proto.Noop.Expression.Builder builderForValue) {
        result.hasLhs = true;
        result.lhs_ = builderForValue.build();
        return this;
      }
      public Builder mergeLhs(noop.model.proto.Noop.Expression value) {
        if (result.hasLhs() &&
            result.lhs_ != noop.model.proto.Noop.Expression.getDefaultInstance()) {
          result.lhs_ =
            noop.model.proto.Noop.Expression.newBuilder(result.lhs_).mergeFrom(value).buildPartial();
        } else {
          result.lhs_ = value;
        }
        result.hasLhs = true;
        return this;
      }
      public Builder clearLhs() {
        result.hasLhs = false;
        result.lhs_ = noop.model.proto.Noop.Expression.getDefaultInstance();
        return this;
      }
      
      // required string method = 2;
      public boolean hasMethod() {
        return result.hasMethod();
      }
      public java.lang.String getMethod() {
        return result.getMethod();
      }
      public Builder setMethod(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMethod = true;
        result.method_ = value;
        return this;
      }
      public Builder clearMethod() {
        result.hasMethod = false;
        result.method_ = getDefaultInstance().getMethod();
        return this;
      }
      
      // repeated .Expression argument = 3;
      public java.util.List<noop.model.proto.Noop.Expression> getArgumentList() {
        return java.util.Collections.unmodifiableList(result.argument_);
      }
      public int getArgumentCount() {
        return result.getArgumentCount();
      }
      public noop.model.proto.Noop.Expression getArgument(int index) {
        return result.getArgument(index);
      }
      public Builder setArgument(int index, noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.argument_.set(index, value);
        return this;
      }
      public Builder setArgument(int index, noop.model.proto.Noop.Expression.Builder builderForValue) {
        result.argument_.set(index, builderForValue.build());
        return this;
      }
      public Builder addArgument(noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.argument_.isEmpty()) {
          result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
        }
        result.argument_.add(value);
        return this;
      }
      public Builder addArgument(noop.model.proto.Noop.Expression.Builder builderForValue) {
        if (result.argument_.isEmpty()) {
          result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
        }
        result.argument_.add(builderForValue.build());
        return this;
      }
      public Builder addAllArgument(
          java.lang.Iterable<? extends noop.model.proto.Noop.Expression> values) {
        if (result.argument_.isEmpty()) {
          result.argument_ = new java.util.ArrayList<noop.model.proto.Noop.Expression>();
        }
        super.addAll(values, result.argument_);
        return this;
      }
      public Builder clearArgument() {
        result.argument_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Expression extends
      com.google.protobuf.GeneratedMessage {
    // Use Expression.newBuilder() to construct.
    private Expression() {}
    
    private static final Expression defaultInstance = new Expression();
    public static Expression getDefaultInstance() {
      return defaultInstance;
    }
    
    public Expression getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Expression_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Expression_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      EVALUATED(0, 1),
      BOOLEAN_LITERAL(1, 2),
      STRING_LITERAL(2, 3),
      NUMBER_LITERAL(3, 4),
      IDENTIFIER(4, 5),
      CONDITIONAL(5, 6),
      DEREFERENCE(6, 7),
      INDEX(7, 8),
      METHOD_INVOCATION(8, 9),
      RETURN(9, 10),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return EVALUATED;
          case 2: return BOOLEAN_LITERAL;
          case 3: return STRING_LITERAL;
          case 4: return NUMBER_LITERAL;
          case 5: return IDENTIFIER;
          case 6: return CONDITIONAL;
          case 7: return DEREFERENCE;
          case 8: return INDEX;
          case 9: return METHOD_INVOCATION;
          case 10: return RETURN;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return noop.model.proto.Noop.Expression.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        EVALUATED, BOOLEAN_LITERAL, STRING_LITERAL, NUMBER_LITERAL, IDENTIFIER, CONDITIONAL, DEREFERENCE, INDEX, METHOD_INVOCATION, RETURN, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        noop.model.proto.Noop.getDescriptor();
      }
    }
    
    // required .Expression.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private noop.model.proto.Noop.Expression.Type type_ = noop.model.proto.Noop.Expression.Type.EVALUATED;
    public boolean hasType() { return hasType; }
    public noop.model.proto.Noop.Expression.Type getType() { return type_; }
    
    // optional bool booleanVal = 2;
    public static final int BOOLEANVAL_FIELD_NUMBER = 2;
    private boolean hasBooleanVal;
    private boolean booleanVal_ = false;
    public boolean hasBooleanVal() { return hasBooleanVal; }
    public boolean getBooleanVal() { return booleanVal_; }
    
    // optional string stringVal = 3;
    public static final int STRINGVAL_FIELD_NUMBER = 3;
    private boolean hasStringVal;
    private java.lang.String stringVal_ = "";
    public boolean hasStringVal() { return hasStringVal; }
    public java.lang.String getStringVal() { return stringVal_; }
    
    // optional uint32 numberVal = 4;
    public static final int NUMBERVAL_FIELD_NUMBER = 4;
    private boolean hasNumberVal;
    private int numberVal_ = 0;
    public boolean hasNumberVal() { return hasNumberVal; }
    public int getNumberVal() { return numberVal_; }
    
    // optional .Expression lhs = 5;
    public static final int LHS_FIELD_NUMBER = 5;
    private boolean hasLhs;
    private noop.model.proto.Noop.Expression lhs_ = noop.model.proto.Noop.Expression.getDefaultInstance();
    public boolean hasLhs() { return hasLhs; }
    public noop.model.proto.Noop.Expression getLhs() { return lhs_; }
    
    // optional .Expression rhs = 6;
    public static final int RHS_FIELD_NUMBER = 6;
    private boolean hasRhs;
    private noop.model.proto.Noop.Expression rhs_ = noop.model.proto.Noop.Expression.getDefaultInstance();
    public boolean hasRhs() { return hasRhs; }
    public noop.model.proto.Noop.Expression getRhs() { return rhs_; }
    
    // optional .MethodInvocation methodInvocation = 7;
    public static final int METHODINVOCATION_FIELD_NUMBER = 7;
    private boolean hasMethodInvocation;
    private noop.model.proto.Noop.MethodInvocation methodInvocation_ = noop.model.proto.Noop.MethodInvocation.getDefaultInstance();
    public boolean hasMethodInvocation() { return hasMethodInvocation; }
    public noop.model.proto.Noop.MethodInvocation getMethodInvocation() { return methodInvocation_; }
    
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (hasLhs()) {
        if (!getLhs().isInitialized()) return false;
      }
      if (hasRhs()) {
        if (!getRhs().isInitialized()) return false;
      }
      if (hasMethodInvocation()) {
        if (!getMethodInvocation().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasBooleanVal()) {
        output.writeBool(2, getBooleanVal());
      }
      if (hasStringVal()) {
        output.writeString(3, getStringVal());
      }
      if (hasNumberVal()) {
        output.writeUInt32(4, getNumberVal());
      }
      if (hasLhs()) {
        output.writeMessage(5, getLhs());
      }
      if (hasRhs()) {
        output.writeMessage(6, getRhs());
      }
      if (hasMethodInvocation()) {
        output.writeMessage(7, getMethodInvocation());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasBooleanVal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getBooleanVal());
      }
      if (hasStringVal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getStringVal());
      }
      if (hasNumberVal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, getNumberVal());
      }
      if (hasLhs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLhs());
      }
      if (hasRhs()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRhs());
      }
      if (hasMethodInvocation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMethodInvocation());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Expression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Expression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Expression prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Expression result;
      
      // Construct using noop.model.proto.Noop.Expression.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Expression();
        return builder;
      }
      
      protected noop.model.proto.Noop.Expression internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Expression();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Expression.getDescriptor();
      }
      
      public noop.model.proto.Noop.Expression getDefaultInstanceForType() {
        return noop.model.proto.Noop.Expression.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Expression build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Expression buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Expression buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        noop.model.proto.Noop.Expression returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Expression) {
          return mergeFrom((noop.model.proto.Noop.Expression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Expression other) {
        if (other == noop.model.proto.Noop.Expression.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasBooleanVal()) {
          setBooleanVal(other.getBooleanVal());
        }
        if (other.hasStringVal()) {
          setStringVal(other.getStringVal());
        }
        if (other.hasNumberVal()) {
          setNumberVal(other.getNumberVal());
        }
        if (other.hasLhs()) {
          mergeLhs(other.getLhs());
        }
        if (other.hasRhs()) {
          mergeRhs(other.getRhs());
        }
        if (other.hasMethodInvocation()) {
          mergeMethodInvocation(other.getMethodInvocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              noop.model.proto.Noop.Expression.Type value = noop.model.proto.Noop.Expression.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 16: {
              setBooleanVal(input.readBool());
              break;
            }
            case 26: {
              setStringVal(input.readString());
              break;
            }
            case 32: {
              setNumberVal(input.readUInt32());
              break;
            }
            case 42: {
              noop.model.proto.Noop.Expression.Builder subBuilder = noop.model.proto.Noop.Expression.newBuilder();
              if (hasLhs()) {
                subBuilder.mergeFrom(getLhs());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLhs(subBuilder.buildPartial());
              break;
            }
            case 50: {
              noop.model.proto.Noop.Expression.Builder subBuilder = noop.model.proto.Noop.Expression.newBuilder();
              if (hasRhs()) {
                subBuilder.mergeFrom(getRhs());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRhs(subBuilder.buildPartial());
              break;
            }
            case 58: {
              noop.model.proto.Noop.MethodInvocation.Builder subBuilder = noop.model.proto.Noop.MethodInvocation.newBuilder();
              if (hasMethodInvocation()) {
                subBuilder.mergeFrom(getMethodInvocation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMethodInvocation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .Expression.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public noop.model.proto.Noop.Expression.Type getType() {
        return result.getType();
      }
      public Builder setType(noop.model.proto.Noop.Expression.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = noop.model.proto.Noop.Expression.Type.EVALUATED;
        return this;
      }
      
      // optional bool booleanVal = 2;
      public boolean hasBooleanVal() {
        return result.hasBooleanVal();
      }
      public boolean getBooleanVal() {
        return result.getBooleanVal();
      }
      public Builder setBooleanVal(boolean value) {
        result.hasBooleanVal = true;
        result.booleanVal_ = value;
        return this;
      }
      public Builder clearBooleanVal() {
        result.hasBooleanVal = false;
        result.booleanVal_ = false;
        return this;
      }
      
      // optional string stringVal = 3;
      public boolean hasStringVal() {
        return result.hasStringVal();
      }
      public java.lang.String getStringVal() {
        return result.getStringVal();
      }
      public Builder setStringVal(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringVal = true;
        result.stringVal_ = value;
        return this;
      }
      public Builder clearStringVal() {
        result.hasStringVal = false;
        result.stringVal_ = getDefaultInstance().getStringVal();
        return this;
      }
      
      // optional uint32 numberVal = 4;
      public boolean hasNumberVal() {
        return result.hasNumberVal();
      }
      public int getNumberVal() {
        return result.getNumberVal();
      }
      public Builder setNumberVal(int value) {
        result.hasNumberVal = true;
        result.numberVal_ = value;
        return this;
      }
      public Builder clearNumberVal() {
        result.hasNumberVal = false;
        result.numberVal_ = 0;
        return this;
      }
      
      // optional .Expression lhs = 5;
      public boolean hasLhs() {
        return result.hasLhs();
      }
      public noop.model.proto.Noop.Expression getLhs() {
        return result.getLhs();
      }
      public Builder setLhs(noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLhs = true;
        result.lhs_ = value;
        return this;
      }
      public Builder setLhs(noop.model.proto.Noop.Expression.Builder builderForValue) {
        result.hasLhs = true;
        result.lhs_ = builderForValue.build();
        return this;
      }
      public Builder mergeLhs(noop.model.proto.Noop.Expression value) {
        if (result.hasLhs() &&
            result.lhs_ != noop.model.proto.Noop.Expression.getDefaultInstance()) {
          result.lhs_ =
            noop.model.proto.Noop.Expression.newBuilder(result.lhs_).mergeFrom(value).buildPartial();
        } else {
          result.lhs_ = value;
        }
        result.hasLhs = true;
        return this;
      }
      public Builder clearLhs() {
        result.hasLhs = false;
        result.lhs_ = noop.model.proto.Noop.Expression.getDefaultInstance();
        return this;
      }
      
      // optional .Expression rhs = 6;
      public boolean hasRhs() {
        return result.hasRhs();
      }
      public noop.model.proto.Noop.Expression getRhs() {
        return result.getRhs();
      }
      public Builder setRhs(noop.model.proto.Noop.Expression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRhs = true;
        result.rhs_ = value;
        return this;
      }
      public Builder setRhs(noop.model.proto.Noop.Expression.Builder builderForValue) {
        result.hasRhs = true;
        result.rhs_ = builderForValue.build();
        return this;
      }
      public Builder mergeRhs(noop.model.proto.Noop.Expression value) {
        if (result.hasRhs() &&
            result.rhs_ != noop.model.proto.Noop.Expression.getDefaultInstance()) {
          result.rhs_ =
            noop.model.proto.Noop.Expression.newBuilder(result.rhs_).mergeFrom(value).buildPartial();
        } else {
          result.rhs_ = value;
        }
        result.hasRhs = true;
        return this;
      }
      public Builder clearRhs() {
        result.hasRhs = false;
        result.rhs_ = noop.model.proto.Noop.Expression.getDefaultInstance();
        return this;
      }
      
      // optional .MethodInvocation methodInvocation = 7;
      public boolean hasMethodInvocation() {
        return result.hasMethodInvocation();
      }
      public noop.model.proto.Noop.MethodInvocation getMethodInvocation() {
        return result.getMethodInvocation();
      }
      public Builder setMethodInvocation(noop.model.proto.Noop.MethodInvocation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMethodInvocation = true;
        result.methodInvocation_ = value;
        return this;
      }
      public Builder setMethodInvocation(noop.model.proto.Noop.MethodInvocation.Builder builderForValue) {
        result.hasMethodInvocation = true;
        result.methodInvocation_ = builderForValue.build();
        return this;
      }
      public Builder mergeMethodInvocation(noop.model.proto.Noop.MethodInvocation value) {
        if (result.hasMethodInvocation() &&
            result.methodInvocation_ != noop.model.proto.Noop.MethodInvocation.getDefaultInstance()) {
          result.methodInvocation_ =
            noop.model.proto.Noop.MethodInvocation.newBuilder(result.methodInvocation_).mergeFrom(value).buildPartial();
        } else {
          result.methodInvocation_ = value;
        }
        result.hasMethodInvocation = true;
        return this;
      }
      public Builder clearMethodInvocation() {
        result.hasMethodInvocation = false;
        result.methodInvocation_ = noop.model.proto.Noop.MethodInvocation.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Unittest extends
      com.google.protobuf.GeneratedMessage {
    // Use Unittest.newBuilder() to construct.
    private Unittest() {}
    
    private static final Unittest defaultInstance = new Unittest();
    public static Unittest getDefaultInstance() {
      return defaultInstance;
    }
    
    public Unittest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Unittest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Unittest_fieldAccessorTable;
    }
    
    // required string description = 1;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // optional .BindingBlock local_binding = 3;
    public static final int LOCAL_BINDING_FIELD_NUMBER = 3;
    private boolean hasLocalBinding;
    private noop.model.proto.Noop.BindingBlock localBinding_ = noop.model.proto.Noop.BindingBlock.getDefaultInstance();
    public boolean hasLocalBinding() { return hasLocalBinding; }
    public noop.model.proto.Noop.BindingBlock getLocalBinding() { return localBinding_; }
    
    // required .Block block = 4;
    public static final int BLOCK_FIELD_NUMBER = 4;
    private boolean hasBlock;
    private noop.model.proto.Noop.Block block_ = noop.model.proto.Noop.Block.getDefaultInstance();
    public boolean hasBlock() { return hasBlock; }
    public noop.model.proto.Noop.Block getBlock() { return block_; }
    
    public final boolean isInitialized() {
      if (!hasDescription) return false;
      if (!hasBlock) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      if (hasLocalBinding()) {
        if (!getLocalBinding().isInitialized()) return false;
      }
      if (!getBlock().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasDescription()) {
        output.writeString(1, getDescription());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      if (hasLocalBinding()) {
        output.writeMessage(3, getLocalBinding());
      }
      if (hasBlock()) {
        output.writeMessage(4, getBlock());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDescription());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      if (hasLocalBinding()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getLocalBinding());
      }
      if (hasBlock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBlock());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Unittest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Unittest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Unittest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Unittest result;
      
      // Construct using noop.model.proto.Noop.Unittest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Unittest();
        return builder;
      }
      
      protected noop.model.proto.Noop.Unittest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Unittest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Unittest.getDescriptor();
      }
      
      public noop.model.proto.Noop.Unittest getDefaultInstanceForType() {
        return noop.model.proto.Noop.Unittest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Unittest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Unittest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Unittest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        noop.model.proto.Noop.Unittest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Unittest) {
          return mergeFrom((noop.model.proto.Noop.Unittest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Unittest other) {
        if (other == noop.model.proto.Noop.Unittest.getDefaultInstance()) return this;
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (other.hasLocalBinding()) {
          mergeLocalBinding(other.getLocalBinding());
        }
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDescription(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              noop.model.proto.Noop.BindingBlock.Builder subBuilder = noop.model.proto.Noop.BindingBlock.newBuilder();
              if (hasLocalBinding()) {
                subBuilder.mergeFrom(getLocalBinding());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocalBinding(subBuilder.buildPartial());
              break;
            }
            case 34: {
              noop.model.proto.Noop.Block.Builder subBuilder = noop.model.proto.Noop.Block.newBuilder();
              if (hasBlock()) {
                subBuilder.mergeFrom(getBlock());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlock(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string description = 1;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // optional .BindingBlock local_binding = 3;
      public boolean hasLocalBinding() {
        return result.hasLocalBinding();
      }
      public noop.model.proto.Noop.BindingBlock getLocalBinding() {
        return result.getLocalBinding();
      }
      public Builder setLocalBinding(noop.model.proto.Noop.BindingBlock value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLocalBinding = true;
        result.localBinding_ = value;
        return this;
      }
      public Builder setLocalBinding(noop.model.proto.Noop.BindingBlock.Builder builderForValue) {
        result.hasLocalBinding = true;
        result.localBinding_ = builderForValue.build();
        return this;
      }
      public Builder mergeLocalBinding(noop.model.proto.Noop.BindingBlock value) {
        if (result.hasLocalBinding() &&
            result.localBinding_ != noop.model.proto.Noop.BindingBlock.getDefaultInstance()) {
          result.localBinding_ =
            noop.model.proto.Noop.BindingBlock.newBuilder(result.localBinding_).mergeFrom(value).buildPartial();
        } else {
          result.localBinding_ = value;
        }
        result.hasLocalBinding = true;
        return this;
      }
      public Builder clearLocalBinding() {
        result.hasLocalBinding = false;
        result.localBinding_ = noop.model.proto.Noop.BindingBlock.getDefaultInstance();
        return this;
      }
      
      // required .Block block = 4;
      public boolean hasBlock() {
        return result.hasBlock();
      }
      public noop.model.proto.Noop.Block getBlock() {
        return result.getBlock();
      }
      public Builder setBlock(noop.model.proto.Noop.Block value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBlock = true;
        result.block_ = value;
        return this;
      }
      public Builder setBlock(noop.model.proto.Noop.Block.Builder builderForValue) {
        result.hasBlock = true;
        result.block_ = builderForValue.build();
        return this;
      }
      public Builder mergeBlock(noop.model.proto.Noop.Block value) {
        if (result.hasBlock() &&
            result.block_ != noop.model.proto.Noop.Block.getDefaultInstance()) {
          result.block_ =
            noop.model.proto.Noop.Block.newBuilder(result.block_).mergeFrom(value).buildPartial();
        } else {
          result.block_ = value;
        }
        result.hasBlock = true;
        return this;
      }
      public Builder clearBlock() {
        result.hasBlock = false;
        result.block_ = noop.model.proto.Noop.Block.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  public static final class Test extends
      com.google.protobuf.GeneratedMessage {
    // Use Test.newBuilder() to construct.
    private Test() {}
    
    private static final Test defaultInstance = new Test();
    public static Test getDefaultInstance() {
      return defaultInstance;
    }
    
    public Test getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return noop.model.proto.Noop.internal_static_Test_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return noop.model.proto.Noop.internal_static_Test_fieldAccessorTable;
    }
    
    // required string description = 1;
    public static final int DESCRIPTION_FIELD_NUMBER = 1;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional .Documentation documentation = 2;
    public static final int DOCUMENTATION_FIELD_NUMBER = 2;
    private boolean hasDocumentation;
    private noop.model.proto.Noop.Documentation documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
    public boolean hasDocumentation() { return hasDocumentation; }
    public noop.model.proto.Noop.Documentation getDocumentation() { return documentation_; }
    
    // repeated string tag = 3;
    public static final int TAG_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> tag_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getTagList() {
      return tag_;
    }
    public int getTagCount() { return tag_.size(); }
    public java.lang.String getTag(int index) {
      return tag_.get(index);
    }
    
    // required .Block block = 4;
    public static final int BLOCK_FIELD_NUMBER = 4;
    private boolean hasBlock;
    private noop.model.proto.Noop.Block block_ = noop.model.proto.Noop.Block.getDefaultInstance();
    public boolean hasBlock() { return hasBlock; }
    public noop.model.proto.Noop.Block getBlock() { return block_; }
    
    public final boolean isInitialized() {
      if (!hasDescription) return false;
      if (!hasBlock) return false;
      if (hasDocumentation()) {
        if (!getDocumentation().isInitialized()) return false;
      }
      if (!getBlock().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasDescription()) {
        output.writeString(1, getDescription());
      }
      if (hasDocumentation()) {
        output.writeMessage(2, getDocumentation());
      }
      for (java.lang.String element : getTagList()) {
        output.writeString(3, element);
      }
      if (hasBlock()) {
        output.writeMessage(4, getBlock());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDescription());
      }
      if (hasDocumentation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDocumentation());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getTagList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTagList().size();
      }
      if (hasBlock()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBlock());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static noop.model.proto.Noop.Test parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Test parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Test parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static noop.model.proto.Noop.Test parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(noop.model.proto.Noop.Test prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private noop.model.proto.Noop.Test result;
      
      // Construct using noop.model.proto.Noop.Test.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new noop.model.proto.Noop.Test();
        return builder;
      }
      
      protected noop.model.proto.Noop.Test internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new noop.model.proto.Noop.Test();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return noop.model.proto.Noop.Test.getDescriptor();
      }
      
      public noop.model.proto.Noop.Test getDefaultInstanceForType() {
        return noop.model.proto.Noop.Test.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public noop.model.proto.Noop.Test build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private noop.model.proto.Noop.Test buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public noop.model.proto.Noop.Test buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tag_ != java.util.Collections.EMPTY_LIST) {
          result.tag_ =
            java.util.Collections.unmodifiableList(result.tag_);
        }
        noop.model.proto.Noop.Test returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof noop.model.proto.Noop.Test) {
          return mergeFrom((noop.model.proto.Noop.Test)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(noop.model.proto.Noop.Test other) {
        if (other == noop.model.proto.Noop.Test.getDefaultInstance()) return this;
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasDocumentation()) {
          mergeDocumentation(other.getDocumentation());
        }
        if (!other.tag_.isEmpty()) {
          if (result.tag_.isEmpty()) {
            result.tag_ = new java.util.ArrayList<java.lang.String>();
          }
          result.tag_.addAll(other.tag_);
        }
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDescription(input.readString());
              break;
            }
            case 18: {
              noop.model.proto.Noop.Documentation.Builder subBuilder = noop.model.proto.Noop.Documentation.newBuilder();
              if (hasDocumentation()) {
                subBuilder.mergeFrom(getDocumentation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDocumentation(subBuilder.buildPartial());
              break;
            }
            case 26: {
              addTag(input.readString());
              break;
            }
            case 34: {
              noop.model.proto.Noop.Block.Builder subBuilder = noop.model.proto.Noop.Block.newBuilder();
              if (hasBlock()) {
                subBuilder.mergeFrom(getBlock());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBlock(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string description = 1;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional .Documentation documentation = 2;
      public boolean hasDocumentation() {
        return result.hasDocumentation();
      }
      public noop.model.proto.Noop.Documentation getDocumentation() {
        return result.getDocumentation();
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDocumentation = true;
        result.documentation_ = value;
        return this;
      }
      public Builder setDocumentation(noop.model.proto.Noop.Documentation.Builder builderForValue) {
        result.hasDocumentation = true;
        result.documentation_ = builderForValue.build();
        return this;
      }
      public Builder mergeDocumentation(noop.model.proto.Noop.Documentation value) {
        if (result.hasDocumentation() &&
            result.documentation_ != noop.model.proto.Noop.Documentation.getDefaultInstance()) {
          result.documentation_ =
            noop.model.proto.Noop.Documentation.newBuilder(result.documentation_).mergeFrom(value).buildPartial();
        } else {
          result.documentation_ = value;
        }
        result.hasDocumentation = true;
        return this;
      }
      public Builder clearDocumentation() {
        result.hasDocumentation = false;
        result.documentation_ = noop.model.proto.Noop.Documentation.getDefaultInstance();
        return this;
      }
      
      // repeated string tag = 3;
      public java.util.List<java.lang.String> getTagList() {
        return java.util.Collections.unmodifiableList(result.tag_);
      }
      public int getTagCount() {
        return result.getTagCount();
      }
      public java.lang.String getTag(int index) {
        return result.getTag(index);
      }
      public Builder setTag(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.tag_.set(index, value);
        return this;
      }
      public Builder addTag(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.tag_.isEmpty()) {
          result.tag_ = new java.util.ArrayList<java.lang.String>();
        }
        result.tag_.add(value);
        return this;
      }
      public Builder addAllTag(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.tag_.isEmpty()) {
          result.tag_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.tag_);
        return this;
      }
      public Builder clearTag() {
        result.tag_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required .Block block = 4;
      public boolean hasBlock() {
        return result.hasBlock();
      }
      public noop.model.proto.Noop.Block getBlock() {
        return result.getBlock();
      }
      public Builder setBlock(noop.model.proto.Noop.Block value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBlock = true;
        result.block_ = value;
        return this;
      }
      public Builder setBlock(noop.model.proto.Noop.Block.Builder builderForValue) {
        result.hasBlock = true;
        result.block_ = builderForValue.build();
        return this;
      }
      public Builder mergeBlock(noop.model.proto.Noop.Block value) {
        if (result.hasBlock() &&
            result.block_ != noop.model.proto.Noop.Block.getDefaultInstance()) {
          result.block_ =
            noop.model.proto.Noop.Block.newBuilder(result.block_).mergeFrom(value).buildPartial();
        } else {
          result.block_ = value;
        }
        result.hasBlock = true;
        return this;
      }
      public Builder clearBlock() {
        result.hasBlock = false;
        result.block_ = noop.model.proto.Noop.Block.getDefaultInstance();
        return this;
      }
    }
    
    static {
      noop.model.proto.Noop.getDescriptor();
    }
    
    static {
      noop.model.proto.Noop.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Documentation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Documentation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Library_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Library_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ConcreteClass_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ConcreteClass_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Property_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Property_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Binding_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Binding_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Interface_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Interface_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Alias_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Alias_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MethodSignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MethodSignature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Method_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Method_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BindingBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BindingBlock_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_BindOperator_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BindOperator_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Block_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Block_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MethodInvocation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MethodInvocation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Expression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Expression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Unittest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Unittest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Test_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Test_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036core/src/main/proto/noop.proto\"d\n\rDocu" +
      "mentation\022\017\n\007summary\030\001 \002(\t\022\016\n\006author\030\002 \003" +
      "(\t\022\021\n\tparameter\030\003 \003(\t\022\016\n\006return\030\004 \003(\t\022\017\n" +
      "\007details\030\005 \001(\t\"\337\001\n\007Library\022\014\n\004name\030\001 \002(\t" +
      "\022%\n\rdocumentation\030\002 \001(\0132\016.Documentation\022" +
      "\021\n\tcopyright\030\003 \001(\t\022\031\n\007binding\030\004 \003(\0132\010.Bi" +
      "nding\022\025\n\005alias\030\005 \003(\0132\006.Alias\022\035\n\tinterfac" +
      "e\030\006 \003(\0132\n.Interface\022&\n\016concrete_class\030\007 " +
      "\003(\0132\016.ConcreteClass\022\023\n\004test\030\010 \003(\0132\005.Test" +
      "\"\253\001\n\rConcreteClass\022\014\n\004name\030\001 \002(\t\022%\n\rdocu",
      "mentation\030\002 \001(\0132\016.Documentation\022\022\n\nsuper" +
      "_type\030\003 \003(\t\022\033\n\010property\030\004 \003(\0132\t.Property" +
      "\022\027\n\006method\030\005 \003(\0132\007.Method\022\033\n\010unittest\030\006 " +
      "\003(\0132\t.Unittest\"j\n\010Property\022\014\n\004name\030\001 \002(\t" +
      "\022\014\n\004type\030\002 \002(\t\022\033\n\010modifier\030\003 \003(\0162\t.Modif" +
      "ier\022%\n\rdocumentation\030\004 \001(\0132\016.Documentati" +
      "on\"y\n\007Binding\022\014\n\004name\030\001 \002(\t\022%\n\rdocumenta" +
      "tion\030\002 \001(\0132\016.Documentation\022\033\n\010modifier\030\003" +
      " \003(\0162\t.Modifier\022\034\n\005block\030\004 \002(\0132\r.Binding" +
      "Block\"b\n\tInterface\022\014\n\004name\030\001 \002(\t\022%\n\rdocu",
      "mentation\030\002 \001(\0132\016.Documentation\022 \n\006metho" +
      "d\030\003 \003(\0132\020.MethodSignature\"H\n\005Alias\022\014\n\004na" +
      "me\030\001 \002(\t\022%\n\rdocumentation\030\002 \001(\0132\016.Docume" +
      "ntation\022\n\n\002of\030\003 \002(\t\"\225\001\n\017MethodSignature\022" +
      "\014\n\004name\030\001 \002(\t\022%\n\rdocumentation\030\002 \001(\0132\016.D" +
      "ocumentation\022\033\n\010modifier\030\003 \003(\0162\t.Modifie" +
      "r\022\023\n\013return_type\030\004 \003(\t\022\033\n\010argument\030\005 \003(\013" +
      "2\t.Property\"D\n\006Method\022#\n\tsignature\030\001 \002(\013" +
      "2\020.MethodSignature\022\025\n\005block\030\002 \002(\0132\006.Bloc" +
      "k\"+\n\014BindingBlock\022\033\n\004bind\030\001 \003(\0132\r.BindOp",
      "erator\":\n\014BindOperator\022\014\n\004type\030\001 \002(\t\022\034\n\007" +
      "boundTo\030\002 \002(\0132\013.Expression\"(\n\005Block\022\037\n\ne" +
      "xpression\030\001 \003(\0132\013.Expression\"[\n\020MethodIn" +
      "vocation\022\030\n\003lhs\030\001 \002(\0132\013.Expression\022\016\n\006me" +
      "thod\030\002 \002(\t\022\035\n\010argument\030\003 \003(\0132\013.Expressio" +
      "n\"\374\002\n\nExpression\022\036\n\004type\030\001 \002(\0162\020.Express" +
      "ion.Type\022\022\n\nbooleanVal\030\002 \001(\010\022\021\n\tstringVa" +
      "l\030\003 \001(\t\022\021\n\tnumberVal\030\004 \001(\r\022\030\n\003lhs\030\005 \001(\0132" +
      "\013.Expression\022\030\n\003rhs\030\006 \001(\0132\013.Expression\022+" +
      "\n\020methodInvocation\030\007 \001(\0132\021.MethodInvocat",
      "ion\"\262\001\n\004Type\022\r\n\tEVALUATED\020\001\022\023\n\017BOOLEAN_L" +
      "ITERAL\020\002\022\022\n\016STRING_LITERAL\020\003\022\022\n\016NUMBER_L" +
      "ITERAL\020\004\022\016\n\nIDENTIFIER\020\005\022\017\n\013CONDITIONAL\020" +
      "\006\022\017\n\013DEREFERENCE\020\007\022\t\n\005INDEX\020\010\022\025\n\021METHOD_" +
      "INVOCATION\020\t\022\n\n\006RETURN\020\n\"\203\001\n\010Unittest\022\023\n" +
      "\013description\030\001 \002(\t\022%\n\rdocumentation\030\002 \001(" +
      "\0132\016.Documentation\022$\n\rlocal_binding\030\003 \001(\013" +
      "2\r.BindingBlock\022\025\n\005block\030\004 \002(\0132\006.Block\"f" +
      "\n\004Test\022\023\n\013description\030\001 \002(\t\022%\n\rdocumenta" +
      "tion\030\002 \001(\0132\016.Documentation\022\013\n\003tag\030\003 \003(\t\022",
      "\025\n\005block\030\004 \002(\0132\006.Block*#\n\010Modifier\022\013\n\007MU" +
      "TABLE\020\001\022\n\n\006NATIVE\020\002B\022\n\020noop.model.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Documentation_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Documentation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Documentation_descriptor,
              new java.lang.String[] { "Summary", "Author", "Parameter", "Return", "Details", },
              noop.model.proto.Noop.Documentation.class,
              noop.model.proto.Noop.Documentation.Builder.class);
          internal_static_Library_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Library_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Library_descriptor,
              new java.lang.String[] { "Name", "Documentation", "Copyright", "Binding", "Alias", "Interface", "ConcreteClass", "Test", },
              noop.model.proto.Noop.Library.class,
              noop.model.proto.Noop.Library.Builder.class);
          internal_static_ConcreteClass_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ConcreteClass_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ConcreteClass_descriptor,
              new java.lang.String[] { "Name", "Documentation", "SuperType", "Property", "Method", "Unittest", },
              noop.model.proto.Noop.ConcreteClass.class,
              noop.model.proto.Noop.ConcreteClass.Builder.class);
          internal_static_Property_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_Property_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Property_descriptor,
              new java.lang.String[] { "Name", "Type", "Modifier", "Documentation", },
              noop.model.proto.Noop.Property.class,
              noop.model.proto.Noop.Property.Builder.class);
          internal_static_Binding_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_Binding_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Binding_descriptor,
              new java.lang.String[] { "Name", "Documentation", "Modifier", "Block", },
              noop.model.proto.Noop.Binding.class,
              noop.model.proto.Noop.Binding.Builder.class);
          internal_static_Interface_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Interface_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Interface_descriptor,
              new java.lang.String[] { "Name", "Documentation", "Method", },
              noop.model.proto.Noop.Interface.class,
              noop.model.proto.Noop.Interface.Builder.class);
          internal_static_Alias_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_Alias_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Alias_descriptor,
              new java.lang.String[] { "Name", "Documentation", "Of", },
              noop.model.proto.Noop.Alias.class,
              noop.model.proto.Noop.Alias.Builder.class);
          internal_static_MethodSignature_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_MethodSignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MethodSignature_descriptor,
              new java.lang.String[] { "Name", "Documentation", "Modifier", "ReturnType", "Argument", },
              noop.model.proto.Noop.MethodSignature.class,
              noop.model.proto.Noop.MethodSignature.Builder.class);
          internal_static_Method_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_Method_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Method_descriptor,
              new java.lang.String[] { "Signature", "Block", },
              noop.model.proto.Noop.Method.class,
              noop.model.proto.Noop.Method.Builder.class);
          internal_static_BindingBlock_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_BindingBlock_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BindingBlock_descriptor,
              new java.lang.String[] { "Bind", },
              noop.model.proto.Noop.BindingBlock.class,
              noop.model.proto.Noop.BindingBlock.Builder.class);
          internal_static_BindOperator_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_BindOperator_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_BindOperator_descriptor,
              new java.lang.String[] { "Type", "BoundTo", },
              noop.model.proto.Noop.BindOperator.class,
              noop.model.proto.Noop.BindOperator.Builder.class);
          internal_static_Block_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_Block_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Block_descriptor,
              new java.lang.String[] { "Expression", },
              noop.model.proto.Noop.Block.class,
              noop.model.proto.Noop.Block.Builder.class);
          internal_static_MethodInvocation_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_MethodInvocation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MethodInvocation_descriptor,
              new java.lang.String[] { "Lhs", "Method", "Argument", },
              noop.model.proto.Noop.MethodInvocation.class,
              noop.model.proto.Noop.MethodInvocation.Builder.class);
          internal_static_Expression_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_Expression_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Expression_descriptor,
              new java.lang.String[] { "Type", "BooleanVal", "StringVal", "NumberVal", "Lhs", "Rhs", "MethodInvocation", },
              noop.model.proto.Noop.Expression.class,
              noop.model.proto.Noop.Expression.Builder.class);
          internal_static_Unittest_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_Unittest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Unittest_descriptor,
              new java.lang.String[] { "Description", "Documentation", "LocalBinding", "Block", },
              noop.model.proto.Noop.Unittest.class,
              noop.model.proto.Noop.Unittest.Builder.class);
          internal_static_Test_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_Test_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Test_descriptor,
              new java.lang.String[] { "Description", "Documentation", "Tag", "Block", },
              noop.model.proto.Noop.Test.class,
              noop.model.proto.Noop.Test.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
